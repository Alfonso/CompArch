
bomb:     file format elf32-i386
bomb
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048980

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x000035d0 memsz 0x000035d0 flags r-x
    LOAD off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**12
         filesz 0x000008b8 memsz 0x00000f88 flags rw-
 DYNAMIC off    0x00003f14 vaddr 0x0804cf14 paddr 0x0804cf14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002b64 vaddr 0x0804ab64 paddr 0x0804ab64 align 2**2
         filesz 0x0000011c memsz 0x0000011c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048760
  FINI                 0x0804a154
  INIT_ARRAY           0x0804cf08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x0804cf0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804840c
  SYMTAB               0x080481dc
  STRSZ                0x00000195
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804d000
  PLTRELSZ             0x000000e8
  PLTREL               0x00000011
  JMPREL               0x08048678
  REL                  0x08048658
  RELSZ                0x00000020
  RELENT               0x00000008
  VERNEED              0x080485e8
  VERNEEDNUM           0x00000001
  VERSYM               0x080485a2

Version References:
  required from libc.so.6:
    0x0d696913 0x00 07 GLIBC_2.3
    0x0d696911 0x00 06 GLIBC_2.1
    0x0d696917 0x00 05 GLIBC_2.7
    0x09691974 0x00 04 GLIBC_2.3.4
    0x0d696914 0x00 03 GLIBC_2.4
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000030  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000230  080481dc  080481dc  000001dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000195  0804840c  0804840c  0000040c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000046  080485a2  080485a2  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000070  080485e8  080485e8  000005e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000020  08048658  08048658  00000658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      000000e8  08048678  08048678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048760  08048760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001e0  08048790  08048790  00000790  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  08048970  08048970  00000970  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000017d2  08048980  08048980  00000980  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  0804a154  0804a154  00002154  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000009e1  0804a180  0804a180  00002180  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000011c  0804ab64  0804ab64  00002b64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000950  0804ac80  0804ac80  00002c80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  0804cf08  0804cf08  00003f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  0804cf0c  0804cf0c  00003f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  0804cf10  0804cf10  00003f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  0804cf14  0804cf14  00003f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  0804cffc  0804cffc  00003ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000080  0804d000  0804d000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000740  0804d080  0804d080  00004080  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          000006d0  0804d7c0  0804d7c0  000047c0  2**5
                  ALLOC
 26 .comment      00000035  00000000  00000000  000047c0  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000020  00000000  00000000  000047f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_info   00000857  00000000  00000000  00004815  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_abbrev 00000194  00000000  00000000  0000506c  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_line   0000016a  00000000  00000000  00005200  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_str    00000323  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING
 32 .debug_loc    000001cd  00000000  00000000  0000568d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481dc l    d  .dynsym	00000000              .dynsym
0804840c l    d  .dynstr	00000000              .dynstr
080485a2 l    d  .gnu.version	00000000              .gnu.version
080485e8 l    d  .gnu.version_r	00000000              .gnu.version_r
08048658 l    d  .rel.dyn	00000000              .rel.dyn
08048678 l    d  .rel.plt	00000000              .rel.plt
08048760 l    d  .init	00000000              .init
08048790 l    d  .plt	00000000              .plt
08048970 l    d  .plt.got	00000000              .plt.got
08048980 l    d  .text	00000000              .text
0804a154 l    d  .fini	00000000              .fini
0804a180 l    d  .rodata	00000000              .rodata
0804ab64 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
0804ac80 l    d  .eh_frame	00000000              .eh_frame
0804cf08 l    d  .init_array	00000000              .init_array
0804cf0c l    d  .fini_array	00000000              .fini_array
0804cf10 l    d  .jcr	00000000              .jcr
0804cf14 l    d  .dynamic	00000000              .dynamic
0804cffc l    d  .got	00000000              .got
0804d000 l    d  .got.plt	00000000              .got.plt
0804d080 l    d  .data	00000000              .data
0804d7c0 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_loc	00000000              .debug_loc
00000000 l    df *ABS*	00000000              crtstuff.c
0804cf10 l     O .jcr	00000000              __JCR_LIST__
080489c0 l     F .text	00000000              deregister_tm_clones
080489f0 l     F .text	00000000              register_tm_clones
08048a30 l     F .text	00000000              __do_global_dtors_aux
0804d7e8 l     O .bss	00000001              completed.7209
0804cf0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048a50 l     F .text	00000000              frame_dummy
0804cf08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              bomb.c
00000000 l    df *ABS*	00000000              phases.c
0804a3a0 l     O .rodata	00000040              array.3265
00000000 l    df *ABS*	00000000              support.c
080490ac l     F .text	0000005a              sig_handler
00000000 l    df *ABS*	00000000              driverlib.c
080495c8 l     F .text	000000d4              rio_readlineb
00000000 l    df *ABS*	00000000              crtstuff.c
0804b5cc l     O .eh_frame	00000000              __FRAME_END__
0804cf10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
0804cf0c l       .init_array	00000000              __init_array_end
0804cf14 l     O .dynamic	00000000              _DYNAMIC
0804cf08 l       .init_array	00000000              __init_array_start
0804ab64 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804d000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
0804a150 g     F .text	00000002              __libc_csu_fini
080492d1 g     F .text	00000045              skip
0804956f g     F .text	00000036              phase_defused
0804d0c4 g     O .data	0000000c              n31
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080489b0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804d080  w      .data	00000000              data_start
0804d800 g     O .bss	00000640              input_strings
00000000       F *UND*	00000000              fflush@@GLIBC_2.0
0804d0dc g     O .data	0000000c              n33
0804d7c0 g     O .bss	00000004              stderr@@GLIBC_2.0
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
0804d7c0 g       .data	00000000              _edata
00000000       F *UND*	00000000              signal@@GLIBC_2.0
00000000       F *UND*	00000000              sleep@@GLIBC_2.0
0804d118 g     O .data	0000000c              n44
0804d130 g     O .data	0000000c              n46
0804d100 g     O .data	0000000c              n42
0804d148 g     O .data	0000000c              n48
0804a154 g     F .fini	00000000              _fini
00000000       F *UND*	00000000              alarm@@GLIBC_2.0
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
0804d7ec g     O .bss	00000004              num_input_strings
08048d8a g     F .text	000000a9              phase_5
08049297 g     F .text	00000002              initialize_bomb_solve
08048ee8 g     F .text	00000048              phase_7
08049299 g     F .text	00000038              blank_line
08049067 g     F .text	00000045              phase_9
0804969c g     F .text	000007ca              submitr
08048caa g     F .text	0000007d              phase_3
08048c2d g     F .text	0000005c              phase_1
08049106 g     F .text	0000001f              invalid_phase
08049e9b g     F .text	000001d2              init_driver
00000000       F *UND*	00000000              strcpy@@GLIBC_2.0
0804d16c g     O .data	0000000c              node3
080493fe g     F .text	0000003d              explode_bomb
00000000       F *UND*	00000000              gethostname@@GLIBC_2.0
0804d154 g     O .data	0000000c              node1
00000000       F *UND*	00000000              getenv@@GLIBC_2.0
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
0804d080 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
0804d184 g     O .data	0000000c              node5
00000000       F *UND*	00000000              __memmove_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804d084 g     O .data	00000000              .hidden __dso_handle
08049016 g     F .text	00000051              fun9
0804a184 g     O .rodata	00000004              _IO_stdin_used
0804d0b8 g     O .data	0000000c              n22
0804d5c0 g     O .data	00000200              host_table
0804d0a0 g     O .data	0000000c              n1
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*	00000000              write@@GLIBC_2.0
08049125 g     F .text	0000001f              string_length
00000000       F *UND*	00000000              strcasecmp@@GLIBC_2.0
0804a0f0 g     F .text	0000005d              __libc_csu_init
0804d7e0 g     O .bss	00000004              stdin@@GLIBC_2.0
00000000       F *UND*	00000000              __isoc99_sscanf@@GLIBC_2.7
0804d0e8 g     O .data	0000000c              n34
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
08048e33 g     F .text	00000043              func6
0804d0d0 g     O .data	0000000c              n32
0804de90 g       .bss	00000000              _end
00000000       F *UND*	00000000              __errno_location@@GLIBC_2.0
08048980 g     F .text	00000000              _start
0804a180 g     O .rodata	00000004              _fp_hw
0804d7f0 g     O .bss	00000004              infile
080495a5 g     F .text	00000023              sigalrm_handler
08049e66 g     F .text	00000035              init_timeout
0804d7e4 g     O .bss	00000004              stdout@@GLIBC_2.0
0804d7c0 g       .bss	00000000              __bss_start
0804d1a0 g     O .data	00000400              userid
08048a7b g     F .text	000001b2              main
00000000       F *UND*	00000000              __printf_chk@@GLIBC_2.3.4
0804d13c g     O .data	0000000c              n47
0804d10c g     O .data	0000000c              n43
0804d0f4 g     O .data	0000000c              n41
08049476 g     F .text	000000f9              read_line
0804d124 g     O .data	0000000c              n45
08049144 g     F .text	00000065              strings_not_equal
08048d27 g     F .text	00000063              phase_4
08048f30 g     F .text	000000e6              phase_8
08048e76 g     F .text	00000072              phase_6
0804de40 g     O .bss	00000050              scratch
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a06d g     F .text	0000007c              driver_post
08049316 g     F .text	000000e8              send_msg
08048c89 g     F .text	00000021              phase_2
0804d5a0 g     O .data	00000004              bomb_id
00000000       F *UND*	00000000              socket@@GLIBC_2.0
0804d7c0 g     O .data	00000000              .hidden __TMC_END__
00000000       F *UND*	00000000              __fprintf_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0804d160 g     O .data	0000000c              node2
0804d178 g     O .data	0000000c              node4
00000000       F *UND*	00000000              gethostbyname@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
0804d190 g     O .data	0000000c              node6
00000000       F *UND*	00000000              connect@@GLIBC_2.0
08048760 g     F .init	00000000              _init
00000000       F *UND*	00000000              close@@GLIBC_2.0
0804943b g     F .text	0000003b              read_six_numbers
0804d0ac g     O .data	0000000c              n21
080491a9 g     F .text	000000ee              initialize_bomb
00000000       F *UND*	00000000              __ctype_b_loc@@GLIBC_2.3
00000000       F *UND*	00000000              __sprintf_chk@@GLIBC_2.3.4



Disassembly of section .init:

08048760 <_init>:
 8048760:	53                   	push   %ebx
 8048761:	83 ec 08             	sub    $0x8,%esp
 8048764:	e8 47 02 00 00       	call   80489b0 <__x86.get_pc_thunk.bx>
 8048769:	81 c3 97 48 00 00    	add    $0x4897,%ebx
 804876f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048775:	85 c0                	test   %eax,%eax
 8048777:	74 05                	je     804877e <_init+0x1e>
 8048779:	e8 f2 01 00 00       	call   8048970 <.plt.got>
 804877e:	83 c4 08             	add    $0x8,%esp
 8048781:	5b                   	pop    %ebx
 8048782:	c3                   	ret    

Disassembly of section .plt:

08048790 <.plt>:
 8048790:	ff 35 04 d0 04 08    	pushl  0x804d004
 8048796:	ff 25 08 d0 04 08    	jmp    *0x804d008
 804879c:	00 00                	add    %al,(%eax)
	...

080487a0 <read@plt>:
 80487a0:	ff 25 0c d0 04 08    	jmp    *0x804d00c
 80487a6:	68 00 00 00 00       	push   $0x0
 80487ab:	e9 e0 ff ff ff       	jmp    8048790 <.plt>

080487b0 <fflush@plt>:
 80487b0:	ff 25 10 d0 04 08    	jmp    *0x804d010
 80487b6:	68 08 00 00 00       	push   $0x8
 80487bb:	e9 d0 ff ff ff       	jmp    8048790 <.plt>

080487c0 <fgets@plt>:
 80487c0:	ff 25 14 d0 04 08    	jmp    *0x804d014
 80487c6:	68 10 00 00 00       	push   $0x10
 80487cb:	e9 c0 ff ff ff       	jmp    8048790 <.plt>

080487d0 <signal@plt>:
 80487d0:	ff 25 18 d0 04 08    	jmp    *0x804d018
 80487d6:	68 18 00 00 00       	push   $0x18
 80487db:	e9 b0 ff ff ff       	jmp    8048790 <.plt>

080487e0 <sleep@plt>:
 80487e0:	ff 25 1c d0 04 08    	jmp    *0x804d01c
 80487e6:	68 20 00 00 00       	push   $0x20
 80487eb:	e9 a0 ff ff ff       	jmp    8048790 <.plt>

080487f0 <alarm@plt>:
 80487f0:	ff 25 20 d0 04 08    	jmp    *0x804d020
 80487f6:	68 28 00 00 00       	push   $0x28
 80487fb:	e9 90 ff ff ff       	jmp    8048790 <.plt>

08048800 <__stack_chk_fail@plt>:
 8048800:	ff 25 24 d0 04 08    	jmp    *0x804d024
 8048806:	68 30 00 00 00       	push   $0x30
 804880b:	e9 80 ff ff ff       	jmp    8048790 <.plt>

08048810 <strcpy@plt>:
 8048810:	ff 25 28 d0 04 08    	jmp    *0x804d028
 8048816:	68 38 00 00 00       	push   $0x38
 804881b:	e9 70 ff ff ff       	jmp    8048790 <.plt>

08048820 <gethostname@plt>:
 8048820:	ff 25 2c d0 04 08    	jmp    *0x804d02c
 8048826:	68 40 00 00 00       	push   $0x40
 804882b:	e9 60 ff ff ff       	jmp    8048790 <.plt>

08048830 <getenv@plt>:
 8048830:	ff 25 30 d0 04 08    	jmp    *0x804d030
 8048836:	68 48 00 00 00       	push   $0x48
 804883b:	e9 50 ff ff ff       	jmp    8048790 <.plt>

08048840 <malloc@plt>:
 8048840:	ff 25 34 d0 04 08    	jmp    *0x804d034
 8048846:	68 50 00 00 00       	push   $0x50
 804884b:	e9 40 ff ff ff       	jmp    8048790 <.plt>

08048850 <puts@plt>:
 8048850:	ff 25 38 d0 04 08    	jmp    *0x804d038
 8048856:	68 58 00 00 00       	push   $0x58
 804885b:	e9 30 ff ff ff       	jmp    8048790 <.plt>

08048860 <__memmove_chk@plt>:
 8048860:	ff 25 3c d0 04 08    	jmp    *0x804d03c
 8048866:	68 60 00 00 00       	push   $0x60
 804886b:	e9 20 ff ff ff       	jmp    8048790 <.plt>

08048870 <exit@plt>:
 8048870:	ff 25 40 d0 04 08    	jmp    *0x804d040
 8048876:	68 68 00 00 00       	push   $0x68
 804887b:	e9 10 ff ff ff       	jmp    8048790 <.plt>

08048880 <__libc_start_main@plt>:
 8048880:	ff 25 44 d0 04 08    	jmp    *0x804d044
 8048886:	68 70 00 00 00       	push   $0x70
 804888b:	e9 00 ff ff ff       	jmp    8048790 <.plt>

08048890 <write@plt>:
 8048890:	ff 25 48 d0 04 08    	jmp    *0x804d048
 8048896:	68 78 00 00 00       	push   $0x78
 804889b:	e9 f0 fe ff ff       	jmp    8048790 <.plt>

080488a0 <strcasecmp@plt>:
 80488a0:	ff 25 4c d0 04 08    	jmp    *0x804d04c
 80488a6:	68 80 00 00 00       	push   $0x80
 80488ab:	e9 e0 fe ff ff       	jmp    8048790 <.plt>

080488b0 <__isoc99_sscanf@plt>:
 80488b0:	ff 25 50 d0 04 08    	jmp    *0x804d050
 80488b6:	68 88 00 00 00       	push   $0x88
 80488bb:	e9 d0 fe ff ff       	jmp    8048790 <.plt>

080488c0 <fopen@plt>:
 80488c0:	ff 25 54 d0 04 08    	jmp    *0x804d054
 80488c6:	68 90 00 00 00       	push   $0x90
 80488cb:	e9 c0 fe ff ff       	jmp    8048790 <.plt>

080488d0 <__errno_location@plt>:
 80488d0:	ff 25 58 d0 04 08    	jmp    *0x804d058
 80488d6:	68 98 00 00 00       	push   $0x98
 80488db:	e9 b0 fe ff ff       	jmp    8048790 <.plt>

080488e0 <__printf_chk@plt>:
 80488e0:	ff 25 5c d0 04 08    	jmp    *0x804d05c
 80488e6:	68 a0 00 00 00       	push   $0xa0
 80488eb:	e9 a0 fe ff ff       	jmp    8048790 <.plt>

080488f0 <socket@plt>:
 80488f0:	ff 25 60 d0 04 08    	jmp    *0x804d060
 80488f6:	68 a8 00 00 00       	push   $0xa8
 80488fb:	e9 90 fe ff ff       	jmp    8048790 <.plt>

08048900 <__fprintf_chk@plt>:
 8048900:	ff 25 64 d0 04 08    	jmp    *0x804d064
 8048906:	68 b0 00 00 00       	push   $0xb0
 804890b:	e9 80 fe ff ff       	jmp    8048790 <.plt>

08048910 <gethostbyname@plt>:
 8048910:	ff 25 68 d0 04 08    	jmp    *0x804d068
 8048916:	68 b8 00 00 00       	push   $0xb8
 804891b:	e9 70 fe ff ff       	jmp    8048790 <.plt>

08048920 <strtol@plt>:
 8048920:	ff 25 6c d0 04 08    	jmp    *0x804d06c
 8048926:	68 c0 00 00 00       	push   $0xc0
 804892b:	e9 60 fe ff ff       	jmp    8048790 <.plt>

08048930 <connect@plt>:
 8048930:	ff 25 70 d0 04 08    	jmp    *0x804d070
 8048936:	68 c8 00 00 00       	push   $0xc8
 804893b:	e9 50 fe ff ff       	jmp    8048790 <.plt>

08048940 <close@plt>:
 8048940:	ff 25 74 d0 04 08    	jmp    *0x804d074
 8048946:	68 d0 00 00 00       	push   $0xd0
 804894b:	e9 40 fe ff ff       	jmp    8048790 <.plt>

08048950 <__ctype_b_loc@plt>:
 8048950:	ff 25 78 d0 04 08    	jmp    *0x804d078
 8048956:	68 d8 00 00 00       	push   $0xd8
 804895b:	e9 30 fe ff ff       	jmp    8048790 <.plt>

08048960 <__sprintf_chk@plt>:
 8048960:	ff 25 7c d0 04 08    	jmp    *0x804d07c
 8048966:	68 e0 00 00 00       	push   $0xe0
 804896b:	e9 20 fe ff ff       	jmp    8048790 <.plt>

Disassembly of section .plt.got:

08048970 <.plt.got>:
 8048970:	ff 25 fc cf 04 08    	jmp    *0x804cffc
 8048976:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048980 <_start>:
 8048980:	31 ed                	xor    %ebp,%ebp
 8048982:	5e                   	pop    %esi
 8048983:	89 e1                	mov    %esp,%ecx
 8048985:	83 e4 f0             	and    $0xfffffff0,%esp
 8048988:	50                   	push   %eax
 8048989:	54                   	push   %esp
 804898a:	52                   	push   %edx
 804898b:	68 50 a1 04 08       	push   $0x804a150
 8048990:	68 f0 a0 04 08       	push   $0x804a0f0
 8048995:	51                   	push   %ecx
 8048996:	56                   	push   %esi
 8048997:	68 7b 8a 04 08       	push   $0x8048a7b
 804899c:	e8 df fe ff ff       	call   8048880 <__libc_start_main@plt>
 80489a1:	f4                   	hlt    
 80489a2:	66 90                	xchg   %ax,%ax
 80489a4:	66 90                	xchg   %ax,%ax
 80489a6:	66 90                	xchg   %ax,%ax
 80489a8:	66 90                	xchg   %ax,%ax
 80489aa:	66 90                	xchg   %ax,%ax
 80489ac:	66 90                	xchg   %ax,%ax
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <__x86.get_pc_thunk.bx>:
 80489b0:	8b 1c 24             	mov    (%esp),%ebx
 80489b3:	c3                   	ret    
 80489b4:	66 90                	xchg   %ax,%ax
 80489b6:	66 90                	xchg   %ax,%ax
 80489b8:	66 90                	xchg   %ax,%ax
 80489ba:	66 90                	xchg   %ax,%ax
 80489bc:	66 90                	xchg   %ax,%ax
 80489be:	66 90                	xchg   %ax,%ax

080489c0 <deregister_tm_clones>:
 80489c0:	b8 c3 d7 04 08       	mov    $0x804d7c3,%eax
 80489c5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489ca:	83 f8 06             	cmp    $0x6,%eax
 80489cd:	76 1a                	jbe    80489e9 <deregister_tm_clones+0x29>
 80489cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80489d4:	85 c0                	test   %eax,%eax
 80489d6:	74 11                	je     80489e9 <deregister_tm_clones+0x29>
 80489d8:	55                   	push   %ebp
 80489d9:	89 e5                	mov    %esp,%ebp
 80489db:	83 ec 14             	sub    $0x14,%esp
 80489de:	68 c0 d7 04 08       	push   $0x804d7c0
 80489e3:	ff d0                	call   *%eax
 80489e5:	83 c4 10             	add    $0x10,%esp
 80489e8:	c9                   	leave  
 80489e9:	f3 c3                	repz ret 
 80489eb:	90                   	nop
 80489ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080489f0 <register_tm_clones>:
 80489f0:	b8 c0 d7 04 08       	mov    $0x804d7c0,%eax
 80489f5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489fa:	c1 f8 02             	sar    $0x2,%eax
 80489fd:	89 c2                	mov    %eax,%edx
 80489ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048a02:	01 d0                	add    %edx,%eax
 8048a04:	d1 f8                	sar    %eax
 8048a06:	74 1b                	je     8048a23 <register_tm_clones+0x33>
 8048a08:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a0d:	85 d2                	test   %edx,%edx
 8048a0f:	74 12                	je     8048a23 <register_tm_clones+0x33>
 8048a11:	55                   	push   %ebp
 8048a12:	89 e5                	mov    %esp,%ebp
 8048a14:	83 ec 10             	sub    $0x10,%esp
 8048a17:	50                   	push   %eax
 8048a18:	68 c0 d7 04 08       	push   $0x804d7c0
 8048a1d:	ff d2                	call   *%edx
 8048a1f:	83 c4 10             	add    $0x10,%esp
 8048a22:	c9                   	leave  
 8048a23:	f3 c3                	repz ret 
 8048a25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a30 <__do_global_dtors_aux>:
 8048a30:	80 3d e8 d7 04 08 00 	cmpb   $0x0,0x804d7e8
 8048a37:	75 13                	jne    8048a4c <__do_global_dtors_aux+0x1c>
 8048a39:	55                   	push   %ebp
 8048a3a:	89 e5                	mov    %esp,%ebp
 8048a3c:	83 ec 08             	sub    $0x8,%esp
 8048a3f:	e8 7c ff ff ff       	call   80489c0 <deregister_tm_clones>
 8048a44:	c6 05 e8 d7 04 08 01 	movb   $0x1,0x804d7e8
 8048a4b:	c9                   	leave  
 8048a4c:	f3 c3                	repz ret 
 8048a4e:	66 90                	xchg   %ax,%ax

08048a50 <frame_dummy>:
 8048a50:	b8 10 cf 04 08       	mov    $0x804cf10,%eax
 8048a55:	8b 10                	mov    (%eax),%edx
 8048a57:	85 d2                	test   %edx,%edx
 8048a59:	75 05                	jne    8048a60 <frame_dummy+0x10>
 8048a5b:	eb 93                	jmp    80489f0 <register_tm_clones>
 8048a5d:	8d 76 00             	lea    0x0(%esi),%esi
 8048a60:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a65:	85 d2                	test   %edx,%edx
 8048a67:	74 f2                	je     8048a5b <frame_dummy+0xb>
 8048a69:	55                   	push   %ebp
 8048a6a:	89 e5                	mov    %esp,%ebp
 8048a6c:	83 ec 14             	sub    $0x14,%esp
 8048a6f:	50                   	push   %eax
 8048a70:	ff d2                	call   *%edx
 8048a72:	83 c4 10             	add    $0x10,%esp
 8048a75:	c9                   	leave  
 8048a76:	e9 75 ff ff ff       	jmp    80489f0 <register_tm_clones>

08048a7b <main>:
 8048a7b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048a7f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a82:	ff 71 fc             	pushl  -0x4(%ecx)
 8048a85:	55                   	push   %ebp
 8048a86:	89 e5                	mov    %esp,%ebp
 8048a88:	53                   	push   %ebx
 8048a89:	51                   	push   %ecx
 8048a8a:	8b 01                	mov    (%ecx),%eax
 8048a8c:	8b 59 04             	mov    0x4(%ecx),%ebx
 8048a8f:	83 f8 01             	cmp    $0x1,%eax
 8048a92:	75 0c                	jne    8048aa0 <main+0x25>
 8048a94:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8048a99:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048a9e:	eb 5b                	jmp    8048afb <main+0x80>
 8048aa0:	83 f8 02             	cmp    $0x2,%eax
 8048aa3:	75 39                	jne    8048ade <main+0x63>
 8048aa5:	83 ec 08             	sub    $0x8,%esp
 8048aa8:	68 88 a1 04 08       	push   $0x804a188
 8048aad:	ff 73 04             	pushl  0x4(%ebx)
 8048ab0:	e8 0b fe ff ff       	call   80488c0 <fopen@plt>
 8048ab5:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048aba:	83 c4 10             	add    $0x10,%esp
 8048abd:	85 c0                	test   %eax,%eax
 8048abf:	75 3a                	jne    8048afb <main+0x80>
 8048ac1:	ff 73 04             	pushl  0x4(%ebx)
 8048ac4:	ff 33                	pushl  (%ebx)
 8048ac6:	68 8a a1 04 08       	push   $0x804a18a
 8048acb:	6a 01                	push   $0x1
 8048acd:	e8 0e fe ff ff       	call   80488e0 <__printf_chk@plt>
 8048ad2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048ad9:	e8 92 fd ff ff       	call   8048870 <exit@plt>
 8048ade:	83 ec 04             	sub    $0x4,%esp
 8048ae1:	ff 33                	pushl  (%ebx)
 8048ae3:	68 a7 a1 04 08       	push   $0x804a1a7
 8048ae8:	6a 01                	push   $0x1
 8048aea:	e8 f1 fd ff ff       	call   80488e0 <__printf_chk@plt>
 8048aef:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048af6:	e8 75 fd ff ff       	call   8048870 <exit@plt>
 8048afb:	e8 a9 06 00 00       	call   80491a9 <initialize_bomb>
 8048b00:	83 ec 0c             	sub    $0xc,%esp
 8048b03:	68 18 a2 04 08       	push   $0x804a218
 8048b08:	e8 43 fd ff ff       	call   8048850 <puts@plt>
 8048b0d:	c7 04 24 54 a2 04 08 	movl   $0x804a254,(%esp)
 8048b14:	e8 37 fd ff ff       	call   8048850 <puts@plt>
 8048b19:	e8 58 09 00 00       	call   8049476 <read_line>
 8048b1e:	89 04 24             	mov    %eax,(%esp)
 8048b21:	e8 07 01 00 00       	call   8048c2d <phase_1>
 8048b26:	e8 44 0a 00 00       	call   804956f <phase_defused>
 8048b2b:	c7 04 24 80 a2 04 08 	movl   $0x804a280,(%esp)
 8048b32:	e8 19 fd ff ff       	call   8048850 <puts@plt>
 8048b37:	e8 3a 09 00 00       	call   8049476 <read_line>
 8048b3c:	89 04 24             	mov    %eax,(%esp)
 8048b3f:	e8 45 01 00 00       	call   8048c89 <phase_2>
 8048b44:	e8 26 0a 00 00       	call   804956f <phase_defused>
 8048b49:	c7 04 24 c1 a1 04 08 	movl   $0x804a1c1,(%esp)
 8048b50:	e8 fb fc ff ff       	call   8048850 <puts@plt>
 8048b55:	e8 1c 09 00 00       	call   8049476 <read_line>
 8048b5a:	89 04 24             	mov    %eax,(%esp)
 8048b5d:	e8 48 01 00 00       	call   8048caa <phase_3>
 8048b62:	e8 08 0a 00 00       	call   804956f <phase_defused>
 8048b67:	c7 04 24 df a1 04 08 	movl   $0x804a1df,(%esp)
 8048b6e:	e8 dd fc ff ff       	call   8048850 <puts@plt>
 8048b73:	e8 fe 08 00 00       	call   8049476 <read_line>
 8048b78:	89 04 24             	mov    %eax,(%esp)
 8048b7b:	e8 a7 01 00 00       	call   8048d27 <phase_4>
 8048b80:	e8 ea 09 00 00       	call   804956f <phase_defused>
 8048b85:	c7 04 24 ac a2 04 08 	movl   $0x804a2ac,(%esp)
 8048b8c:	e8 bf fc ff ff       	call   8048850 <puts@plt>
 8048b91:	e8 e0 08 00 00       	call   8049476 <read_line>
 8048b96:	89 04 24             	mov    %eax,(%esp)
 8048b99:	e8 ec 01 00 00       	call   8048d8a <phase_5>
 8048b9e:	e8 cc 09 00 00       	call   804956f <phase_defused>
 8048ba3:	c7 04 24 f0 a1 04 08 	movl   $0x804a1f0,(%esp)
 8048baa:	e8 a1 fc ff ff       	call   8048850 <puts@plt>
 8048baf:	e8 c2 08 00 00       	call   8049476 <read_line>
 8048bb4:	89 04 24             	mov    %eax,(%esp)
 8048bb7:	e8 ba 02 00 00       	call   8048e76 <phase_6>
 8048bbc:	e8 ae 09 00 00       	call   804956f <phase_defused>
 8048bc1:	c7 04 24 d0 a2 04 08 	movl   $0x804a2d0,(%esp)
 8048bc8:	e8 83 fc ff ff       	call   8048850 <puts@plt>
 8048bcd:	e8 a4 08 00 00       	call   8049476 <read_line>
 8048bd2:	89 04 24             	mov    %eax,(%esp)
 8048bd5:	e8 0e 03 00 00       	call   8048ee8 <phase_7>
 8048bda:	e8 90 09 00 00       	call   804956f <phase_defused>
 8048bdf:	c7 04 24 f0 a2 04 08 	movl   $0x804a2f0,(%esp)
 8048be6:	e8 65 fc ff ff       	call   8048850 <puts@plt>
 8048beb:	e8 86 08 00 00       	call   8049476 <read_line>
 8048bf0:	89 04 24             	mov    %eax,(%esp)
 8048bf3:	e8 38 03 00 00       	call   8048f30 <phase_8>
 8048bf8:	e8 72 09 00 00       	call   804956f <phase_defused>
 8048bfd:	c7 04 24 0e a2 04 08 	movl   $0x804a20e,(%esp)
 8048c04:	e8 47 fc ff ff       	call   8048850 <puts@plt>
 8048c09:	e8 68 08 00 00       	call   8049476 <read_line>
 8048c0e:	89 04 24             	mov    %eax,(%esp)
 8048c11:	e8 51 04 00 00       	call   8049067 <phase_9>
 8048c16:	e8 54 09 00 00       	call   804956f <phase_defused>
 8048c1b:	83 c4 10             	add    $0x10,%esp
 8048c1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c23:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048c26:	59                   	pop    %ecx
 8048c27:	5b                   	pop    %ebx
 8048c28:	5d                   	pop    %ebp
 8048c29:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048c2c:	c3                   	ret    

08048c2d <phase_1>:
 8048c2d:	83 ec 20             	sub    $0x20,%esp
 8048c30:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048c36:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048c3a:	31 c0                	xor    %eax,%eax
 8048c3c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048c43:	00 
 8048c44:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048c48:	50                   	push   %eax
 8048c49:	68 c4 a5 04 08       	push   $0x804a5c4
 8048c4e:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048c52:	e8 59 fc ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048c57:	83 c4 10             	add    $0x10,%esp
 8048c5a:	83 f8 01             	cmp    $0x1,%eax
 8048c5d:	74 05                	je     8048c64 <phase_1+0x37>
 8048c5f:	e8 9a 07 00 00       	call   80493fe <explode_bomb>
 8048c64:	81 7c 24 08 3e 02 00 	cmpl   $0x23e,0x8(%esp)
 8048c6b:	00 
 8048c6c:	74 05                	je     8048c73 <phase_1+0x46>
 8048c6e:	e8 8b 07 00 00       	call   80493fe <explode_bomb>
 8048c73:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c77:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c7e:	74 05                	je     8048c85 <phase_1+0x58>
 8048c80:	e8 7b fb ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048c85:	83 c4 1c             	add    $0x1c,%esp
 8048c88:	c3                   	ret    

08048c89 <phase_2>:
 8048c89:	83 ec 14             	sub    $0x14,%esp
 8048c8c:	68 10 a3 04 08       	push   $0x804a310
 8048c91:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048c95:	e8 aa 04 00 00       	call   8049144 <strings_not_equal>
 8048c9a:	83 c4 10             	add    $0x10,%esp
 8048c9d:	85 c0                	test   %eax,%eax
 8048c9f:	74 05                	je     8048ca6 <phase_2+0x1d>
 8048ca1:	e8 58 07 00 00       	call   80493fe <explode_bomb>
 8048ca6:	83 c4 0c             	add    $0xc,%esp
 8048ca9:	c3                   	ret    

08048caa <phase_3>:
 8048caa:	83 ec 18             	sub    $0x18,%esp
 8048cad:	68 48 a3 04 08       	push   $0x804a348
 8048cb2:	e8 6e 04 00 00       	call   8049125 <string_length>
 8048cb7:	83 c0 01             	add    $0x1,%eax
 8048cba:	89 04 24             	mov    %eax,(%esp)
 8048cbd:	e8 7e fb ff ff       	call   8048840 <malloc@plt>
 8048cc2:	c7 00 53 68 65 20    	movl   $0x20656853,(%eax)
 8048cc8:	c7 40 04 73 65 6c 6c 	movl   $0x6c6c6573,0x4(%eax)
 8048ccf:	c7 40 08 73 20 73 65 	movl   $0x65732073,0x8(%eax)
 8048cd6:	c7 40 0c 61 73 68 65 	movl   $0x65687361,0xc(%eax)
 8048cdd:	c7 40 10 6c 6c 73 20 	movl   $0x20736c6c,0x10(%eax)
 8048ce4:	c7 40 14 62 79 20 74 	movl   $0x74207962,0x14(%eax)
 8048ceb:	c7 40 18 68 65 20 73 	movl   $0x73206568,0x18(%eax)
 8048cf2:	c7 40 1c 65 61 20 73 	movl   $0x73206165,0x1c(%eax)
 8048cf9:	c7 40 20 68 6f 72 65 	movl   $0x65726f68,0x20(%eax)
 8048d00:	66 c7 40 24 2e 00    	movw   $0x2e,0x24(%eax)
 8048d06:	c6 40 0a 33          	movb   $0x33,0xa(%eax)
 8048d0a:	83 c4 08             	add    $0x8,%esp
 8048d0d:	50                   	push   %eax
 8048d0e:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048d12:	e8 2d 04 00 00       	call   8049144 <strings_not_equal>
 8048d17:	83 c4 10             	add    $0x10,%esp
 8048d1a:	85 c0                	test   %eax,%eax
 8048d1c:	74 05                	je     8048d23 <phase_3+0x79>
 8048d1e:	e8 db 06 00 00       	call   80493fe <explode_bomb>
 8048d23:	83 c4 0c             	add    $0xc,%esp
 8048d26:	c3                   	ret    

08048d27 <phase_4>:
 8048d27:	56                   	push   %esi
 8048d28:	53                   	push   %ebx
 8048d29:	83 ec 2c             	sub    $0x2c,%esp
 8048d2c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d32:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048d36:	31 c0                	xor    %eax,%eax
 8048d38:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048d3c:	50                   	push   %eax
 8048d3d:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048d41:	e8 f5 06 00 00       	call   804943b <read_six_numbers>
 8048d46:	83 c4 10             	add    $0x10,%esp
 8048d49:	83 7c 24 04 03       	cmpl   $0x3,0x4(%esp)
 8048d4e:	74 05                	je     8048d55 <phase_4+0x2e>
 8048d50:	e8 a9 06 00 00       	call   80493fe <explode_bomb>
 8048d55:	8d 5c 24 04          	lea    0x4(%esp),%ebx
 8048d59:	8d 74 24 18          	lea    0x18(%esp),%esi
 8048d5d:	8b 03                	mov    (%ebx),%eax
 8048d5f:	01 c0                	add    %eax,%eax
 8048d61:	39 43 04             	cmp    %eax,0x4(%ebx)
 8048d64:	74 05                	je     8048d6b <phase_4+0x44>
 8048d66:	e8 93 06 00 00       	call   80493fe <explode_bomb>
 8048d6b:	83 c3 04             	add    $0x4,%ebx
 8048d6e:	39 f3                	cmp    %esi,%ebx
 8048d70:	75 eb                	jne    8048d5d <phase_4+0x36>
 8048d72:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048d76:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d7d:	74 05                	je     8048d84 <phase_4+0x5d>
 8048d7f:	e8 7c fa ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048d84:	83 c4 24             	add    $0x24,%esp
 8048d87:	5b                   	pop    %ebx
 8048d88:	5e                   	pop    %esi
 8048d89:	c3                   	ret    

08048d8a <phase_5>:
 8048d8a:	83 ec 1c             	sub    $0x1c,%esp
 8048d8d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d93:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048d97:	31 c0                	xor    %eax,%eax
 8048d99:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048d9d:	50                   	push   %eax
 8048d9e:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048da2:	50                   	push   %eax
 8048da3:	68 c1 a5 04 08       	push   $0x804a5c1
 8048da8:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048dac:	e8 ff fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048db1:	83 c4 10             	add    $0x10,%esp
 8048db4:	83 f8 01             	cmp    $0x1,%eax
 8048db7:	7f 05                	jg     8048dbe <phase_5+0x34>
 8048db9:	e8 40 06 00 00       	call   80493fe <explode_bomb>
 8048dbe:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048dc3:	77 3c                	ja     8048e01 <phase_5+0x77>
 8048dc5:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048dc9:	ff 24 85 80 a3 04 08 	jmp    *0x804a380(,%eax,4)
 8048dd0:	b8 92 02 00 00       	mov    $0x292,%eax
 8048dd5:	eb 3b                	jmp    8048e12 <phase_5+0x88>
 8048dd7:	b8 8b 03 00 00       	mov    $0x38b,%eax
 8048ddc:	eb 34                	jmp    8048e12 <phase_5+0x88>
 8048dde:	b8 be 01 00 00       	mov    $0x1be,%eax
 8048de3:	eb 2d                	jmp    8048e12 <phase_5+0x88>
 8048de5:	b8 d0 02 00 00       	mov    $0x2d0,%eax
 8048dea:	eb 26                	jmp    8048e12 <phase_5+0x88>
 8048dec:	b8 8c 01 00 00       	mov    $0x18c,%eax
 8048df1:	eb 1f                	jmp    8048e12 <phase_5+0x88>
 8048df3:	b8 70 02 00 00       	mov    $0x270,%eax
 8048df8:	eb 18                	jmp    8048e12 <phase_5+0x88>
 8048dfa:	b8 54 00 00 00       	mov    $0x54,%eax
 8048dff:	eb 11                	jmp    8048e12 <phase_5+0x88>
 8048e01:	e8 f8 05 00 00       	call   80493fe <explode_bomb>
 8048e06:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e0b:	eb 05                	jmp    8048e12 <phase_5+0x88>
 8048e0d:	b8 ae 01 00 00       	mov    $0x1ae,%eax
 8048e12:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048e16:	74 05                	je     8048e1d <phase_5+0x93>
 8048e18:	e8 e1 05 00 00       	call   80493fe <explode_bomb>
 8048e1d:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048e21:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e28:	74 05                	je     8048e2f <phase_5+0xa5>
 8048e2a:	e8 d1 f9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048e2f:	83 c4 1c             	add    $0x1c,%esp
 8048e32:	c3                   	ret    

08048e33 <func6>:
 8048e33:	57                   	push   %edi
 8048e34:	56                   	push   %esi
 8048e35:	53                   	push   %ebx
 8048e36:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048e3a:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8048e3e:	85 db                	test   %ebx,%ebx
 8048e40:	7e 2b                	jle    8048e6d <func6+0x3a>
 8048e42:	89 f8                	mov    %edi,%eax
 8048e44:	83 fb 01             	cmp    $0x1,%ebx
 8048e47:	74 29                	je     8048e72 <func6+0x3f>
 8048e49:	83 ec 08             	sub    $0x8,%esp
 8048e4c:	57                   	push   %edi
 8048e4d:	8d 43 ff             	lea    -0x1(%ebx),%eax
 8048e50:	50                   	push   %eax
 8048e51:	e8 dd ff ff ff       	call   8048e33 <func6>
 8048e56:	83 c4 08             	add    $0x8,%esp
 8048e59:	8d 34 07             	lea    (%edi,%eax,1),%esi
 8048e5c:	57                   	push   %edi
 8048e5d:	83 eb 02             	sub    $0x2,%ebx
 8048e60:	53                   	push   %ebx
 8048e61:	e8 cd ff ff ff       	call   8048e33 <func6>
 8048e66:	83 c4 10             	add    $0x10,%esp
 8048e69:	01 f0                	add    %esi,%eax
 8048e6b:	eb 05                	jmp    8048e72 <func6+0x3f>
 8048e6d:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e72:	5b                   	pop    %ebx
 8048e73:	5e                   	pop    %esi
 8048e74:	5f                   	pop    %edi
 8048e75:	c3                   	ret    

08048e76 <phase_6>:
 8048e76:	83 ec 1c             	sub    $0x1c,%esp
 8048e79:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048e7f:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048e83:	31 c0                	xor    %eax,%eax
 8048e85:	8d 44 24 04          	lea    0x4(%esp),%eax
 8048e89:	50                   	push   %eax
 8048e8a:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048e8e:	50                   	push   %eax
 8048e8f:	68 c1 a5 04 08       	push   $0x804a5c1
 8048e94:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048e98:	e8 13 fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048e9d:	83 c4 10             	add    $0x10,%esp
 8048ea0:	83 f8 02             	cmp    $0x2,%eax
 8048ea3:	75 0c                	jne    8048eb1 <phase_6+0x3b>
 8048ea5:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048ea9:	83 e8 02             	sub    $0x2,%eax
 8048eac:	83 f8 02             	cmp    $0x2,%eax
 8048eaf:	76 05                	jbe    8048eb6 <phase_6+0x40>
 8048eb1:	e8 48 05 00 00       	call   80493fe <explode_bomb>
 8048eb6:	83 ec 08             	sub    $0x8,%esp
 8048eb9:	ff 74 24 0c          	pushl  0xc(%esp)
 8048ebd:	6a 0a                	push   $0xa
 8048ebf:	e8 6f ff ff ff       	call   8048e33 <func6>
 8048ec4:	83 c4 10             	add    $0x10,%esp
 8048ec7:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048ecb:	74 05                	je     8048ed2 <phase_6+0x5c>
 8048ecd:	e8 2c 05 00 00       	call   80493fe <explode_bomb>
 8048ed2:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048ed6:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048edd:	74 05                	je     8048ee4 <phase_6+0x6e>
 8048edf:	e8 1c f9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048ee4:	83 c4 1c             	add    $0x1c,%esp
 8048ee7:	c3                   	ret    

08048ee8 <phase_7>:
 8048ee8:	53                   	push   %ebx
 8048ee9:	83 ec 14             	sub    $0x14,%esp
 8048eec:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8048ef0:	53                   	push   %ebx
 8048ef1:	e8 2f 02 00 00       	call   8049125 <string_length>
 8048ef6:	83 c4 10             	add    $0x10,%esp
 8048ef9:	83 f8 06             	cmp    $0x6,%eax
 8048efc:	74 05                	je     8048f03 <phase_7+0x1b>
 8048efe:	e8 fb 04 00 00       	call   80493fe <explode_bomb>
 8048f03:	89 d8                	mov    %ebx,%eax
 8048f05:	83 c3 06             	add    $0x6,%ebx
 8048f08:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048f0d:	0f b6 10             	movzbl (%eax),%edx
 8048f10:	83 e2 0f             	and    $0xf,%edx
 8048f13:	03 0c 95 a0 a3 04 08 	add    0x804a3a0(,%edx,4),%ecx
 8048f1a:	83 c0 01             	add    $0x1,%eax
 8048f1d:	39 d8                	cmp    %ebx,%eax
 8048f1f:	75 ec                	jne    8048f0d <phase_7+0x25>
 8048f21:	83 f9 49             	cmp    $0x49,%ecx
 8048f24:	74 05                	je     8048f2b <phase_7+0x43>
 8048f26:	e8 d3 04 00 00       	call   80493fe <explode_bomb>
 8048f2b:	83 c4 08             	add    $0x8,%esp
 8048f2e:	5b                   	pop    %ebx
 8048f2f:	c3                   	ret    

08048f30 <phase_8>:
 8048f30:	56                   	push   %esi
 8048f31:	53                   	push   %ebx
 8048f32:	83 ec 4c             	sub    $0x4c,%esp
 8048f35:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048f3b:	89 44 24 44          	mov    %eax,0x44(%esp)
 8048f3f:	31 c0                	xor    %eax,%eax
 8048f41:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048f45:	50                   	push   %eax
 8048f46:	ff 74 24 5c          	pushl  0x5c(%esp)
 8048f4a:	e8 ec 04 00 00       	call   804943b <read_six_numbers>
 8048f4f:	83 c4 10             	add    $0x10,%esp
 8048f52:	be 00 00 00 00       	mov    $0x0,%esi
 8048f57:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax
 8048f5b:	83 e8 01             	sub    $0x1,%eax
 8048f5e:	83 f8 05             	cmp    $0x5,%eax
 8048f61:	76 05                	jbe    8048f68 <phase_8+0x38>
 8048f63:	e8 96 04 00 00       	call   80493fe <explode_bomb>
 8048f68:	83 c6 01             	add    $0x1,%esi
 8048f6b:	83 fe 06             	cmp    $0x6,%esi
 8048f6e:	74 33                	je     8048fa3 <phase_8+0x73>
 8048f70:	89 f3                	mov    %esi,%ebx
 8048f72:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 8048f76:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 8048f7a:	75 05                	jne    8048f81 <phase_8+0x51>
 8048f7c:	e8 7d 04 00 00       	call   80493fe <explode_bomb>
 8048f81:	83 c3 01             	add    $0x1,%ebx
 8048f84:	83 fb 05             	cmp    $0x5,%ebx
 8048f87:	7e e9                	jle    8048f72 <phase_8+0x42>
 8048f89:	eb cc                	jmp    8048f57 <phase_8+0x27>
 8048f8b:	8b 52 08             	mov    0x8(%edx),%edx
 8048f8e:	83 c0 01             	add    $0x1,%eax
 8048f91:	39 c8                	cmp    %ecx,%eax
 8048f93:	75 f6                	jne    8048f8b <phase_8+0x5b>
 8048f95:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 8048f99:	83 c3 01             	add    $0x1,%ebx
 8048f9c:	83 fb 06             	cmp    $0x6,%ebx
 8048f9f:	75 07                	jne    8048fa8 <phase_8+0x78>
 8048fa1:	eb 1c                	jmp    8048fbf <phase_8+0x8f>
 8048fa3:	bb 00 00 00 00       	mov    $0x0,%ebx
 8048fa8:	89 de                	mov    %ebx,%esi
 8048faa:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx
 8048fae:	b8 01 00 00 00       	mov    $0x1,%eax
 8048fb3:	ba 54 d1 04 08       	mov    $0x804d154,%edx
 8048fb8:	83 f9 01             	cmp    $0x1,%ecx
 8048fbb:	7f ce                	jg     8048f8b <phase_8+0x5b>
 8048fbd:	eb d6                	jmp    8048f95 <phase_8+0x65>
 8048fbf:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 8048fc3:	8d 44 24 24          	lea    0x24(%esp),%eax
 8048fc7:	8d 74 24 38          	lea    0x38(%esp),%esi
 8048fcb:	89 d9                	mov    %ebx,%ecx
 8048fcd:	8b 50 04             	mov    0x4(%eax),%edx
 8048fd0:	89 51 08             	mov    %edx,0x8(%ecx)
 8048fd3:	83 c0 04             	add    $0x4,%eax
 8048fd6:	89 d1                	mov    %edx,%ecx
 8048fd8:	39 f0                	cmp    %esi,%eax
 8048fda:	75 f1                	jne    8048fcd <phase_8+0x9d>
 8048fdc:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
 8048fe3:	be 05 00 00 00       	mov    $0x5,%esi
 8048fe8:	8b 43 08             	mov    0x8(%ebx),%eax
 8048feb:	8b 00                	mov    (%eax),%eax
 8048fed:	39 03                	cmp    %eax,(%ebx)
 8048fef:	7d 05                	jge    8048ff6 <phase_8+0xc6>
 8048ff1:	e8 08 04 00 00       	call   80493fe <explode_bomb>
 8048ff6:	8b 5b 08             	mov    0x8(%ebx),%ebx
 8048ff9:	83 ee 01             	sub    $0x1,%esi
 8048ffc:	75 ea                	jne    8048fe8 <phase_8+0xb8>
 8048ffe:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8049002:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049009:	74 05                	je     8049010 <phase_8+0xe0>
 804900b:	e8 f0 f7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049010:	83 c4 44             	add    $0x44,%esp
 8049013:	5b                   	pop    %ebx
 8049014:	5e                   	pop    %esi
 8049015:	c3                   	ret    

08049016 <fun9>:
 8049016:	53                   	push   %ebx
 8049017:	83 ec 08             	sub    $0x8,%esp
 804901a:	8b 54 24 10          	mov    0x10(%esp),%edx
 804901e:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 8049022:	85 d2                	test   %edx,%edx
 8049024:	74 37                	je     804905d <fun9+0x47>
 8049026:	8b 1a                	mov    (%edx),%ebx
 8049028:	39 cb                	cmp    %ecx,%ebx
 804902a:	7e 13                	jle    804903f <fun9+0x29>
 804902c:	83 ec 08             	sub    $0x8,%esp
 804902f:	51                   	push   %ecx
 8049030:	ff 72 04             	pushl  0x4(%edx)
 8049033:	e8 de ff ff ff       	call   8049016 <fun9>
 8049038:	83 c4 10             	add    $0x10,%esp
 804903b:	01 c0                	add    %eax,%eax
 804903d:	eb 23                	jmp    8049062 <fun9+0x4c>
 804903f:	b8 00 00 00 00       	mov    $0x0,%eax
 8049044:	39 cb                	cmp    %ecx,%ebx
 8049046:	74 1a                	je     8049062 <fun9+0x4c>
 8049048:	83 ec 08             	sub    $0x8,%esp
 804904b:	51                   	push   %ecx
 804904c:	ff 72 08             	pushl  0x8(%edx)
 804904f:	e8 c2 ff ff ff       	call   8049016 <fun9>
 8049054:	83 c4 10             	add    $0x10,%esp
 8049057:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 804905b:	eb 05                	jmp    8049062 <fun9+0x4c>
 804905d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049062:	83 c4 08             	add    $0x8,%esp
 8049065:	5b                   	pop    %ebx
 8049066:	c3                   	ret    

08049067 <phase_9>:
 8049067:	53                   	push   %ebx
 8049068:	83 ec 0c             	sub    $0xc,%esp
 804906b:	6a 0a                	push   $0xa
 804906d:	6a 00                	push   $0x0
 804906f:	ff 74 24 1c          	pushl  0x1c(%esp)
 8049073:	e8 a8 f8 ff ff       	call   8048920 <strtol@plt>
 8049078:	89 c3                	mov    %eax,%ebx
 804907a:	8d 40 ff             	lea    -0x1(%eax),%eax
 804907d:	83 c4 10             	add    $0x10,%esp
 8049080:	3d ec 03 00 00       	cmp    $0x3ec,%eax
 8049085:	76 05                	jbe    804908c <phase_9+0x25>
 8049087:	e8 72 03 00 00       	call   80493fe <explode_bomb>
 804908c:	83 ec 08             	sub    $0x8,%esp
 804908f:	53                   	push   %ebx
 8049090:	68 a0 d0 04 08       	push   $0x804d0a0
 8049095:	e8 7c ff ff ff       	call   8049016 <fun9>
 804909a:	83 c4 10             	add    $0x10,%esp
 804909d:	83 f8 06             	cmp    $0x6,%eax
 80490a0:	74 05                	je     80490a7 <phase_9+0x40>
 80490a2:	e8 57 03 00 00       	call   80493fe <explode_bomb>
 80490a7:	83 c4 08             	add    $0x8,%esp
 80490aa:	5b                   	pop    %ebx
 80490ab:	c3                   	ret    

080490ac <sig_handler>:
 80490ac:	83 ec 18             	sub    $0x18,%esp
 80490af:	68 e0 a3 04 08       	push   $0x804a3e0
 80490b4:	e8 97 f7 ff ff       	call   8048850 <puts@plt>
 80490b9:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 80490c0:	e8 1b f7 ff ff       	call   80487e0 <sleep@plt>
 80490c5:	83 c4 08             	add    $0x8,%esp
 80490c8:	68 3d a5 04 08       	push   $0x804a53d
 80490cd:	6a 01                	push   $0x1
 80490cf:	e8 0c f8 ff ff       	call   80488e0 <__printf_chk@plt>
 80490d4:	83 c4 04             	add    $0x4,%esp
 80490d7:	ff 35 e4 d7 04 08    	pushl  0x804d7e4
 80490dd:	e8 ce f6 ff ff       	call   80487b0 <fflush@plt>
 80490e2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80490e9:	e8 f2 f6 ff ff       	call   80487e0 <sleep@plt>
 80490ee:	c7 04 24 45 a5 04 08 	movl   $0x804a545,(%esp)
 80490f5:	e8 56 f7 ff ff       	call   8048850 <puts@plt>
 80490fa:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 8049101:	e8 6a f7 ff ff       	call   8048870 <exit@plt>

08049106 <invalid_phase>:
 8049106:	83 ec 10             	sub    $0x10,%esp
 8049109:	ff 74 24 14          	pushl  0x14(%esp)
 804910d:	68 4d a5 04 08       	push   $0x804a54d
 8049112:	6a 01                	push   $0x1
 8049114:	e8 c7 f7 ff ff       	call   80488e0 <__printf_chk@plt>
 8049119:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049120:	e8 4b f7 ff ff       	call   8048870 <exit@plt>

08049125 <string_length>:
 8049125:	8b 54 24 04          	mov    0x4(%esp),%edx
 8049129:	80 3a 00             	cmpb   $0x0,(%edx)
 804912c:	74 10                	je     804913e <string_length+0x19>
 804912e:	b8 00 00 00 00       	mov    $0x0,%eax
 8049133:	83 c0 01             	add    $0x1,%eax
 8049136:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 804913a:	75 f7                	jne    8049133 <string_length+0xe>
 804913c:	f3 c3                	repz ret 
 804913e:	b8 00 00 00 00       	mov    $0x0,%eax
 8049143:	c3                   	ret    

08049144 <strings_not_equal>:
 8049144:	57                   	push   %edi
 8049145:	56                   	push   %esi
 8049146:	53                   	push   %ebx
 8049147:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 804914b:	8b 74 24 14          	mov    0x14(%esp),%esi
 804914f:	53                   	push   %ebx
 8049150:	e8 d0 ff ff ff       	call   8049125 <string_length>
 8049155:	89 c7                	mov    %eax,%edi
 8049157:	89 34 24             	mov    %esi,(%esp)
 804915a:	e8 c6 ff ff ff       	call   8049125 <string_length>
 804915f:	83 c4 04             	add    $0x4,%esp
 8049162:	ba 01 00 00 00       	mov    $0x1,%edx
 8049167:	39 c7                	cmp    %eax,%edi
 8049169:	75 38                	jne    80491a3 <strings_not_equal+0x5f>
 804916b:	0f b6 03             	movzbl (%ebx),%eax
 804916e:	84 c0                	test   %al,%al
 8049170:	74 1e                	je     8049190 <strings_not_equal+0x4c>
 8049172:	3a 06                	cmp    (%esi),%al
 8049174:	74 06                	je     804917c <strings_not_equal+0x38>
 8049176:	eb 1f                	jmp    8049197 <strings_not_equal+0x53>
 8049178:	3a 06                	cmp    (%esi),%al
 804917a:	75 22                	jne    804919e <strings_not_equal+0x5a>
 804917c:	83 c3 01             	add    $0x1,%ebx
 804917f:	83 c6 01             	add    $0x1,%esi
 8049182:	0f b6 03             	movzbl (%ebx),%eax
 8049185:	84 c0                	test   %al,%al
 8049187:	75 ef                	jne    8049178 <strings_not_equal+0x34>
 8049189:	ba 00 00 00 00       	mov    $0x0,%edx
 804918e:	eb 13                	jmp    80491a3 <strings_not_equal+0x5f>
 8049190:	ba 00 00 00 00       	mov    $0x0,%edx
 8049195:	eb 0c                	jmp    80491a3 <strings_not_equal+0x5f>
 8049197:	ba 01 00 00 00       	mov    $0x1,%edx
 804919c:	eb 05                	jmp    80491a3 <strings_not_equal+0x5f>
 804919e:	ba 01 00 00 00       	mov    $0x1,%edx
 80491a3:	89 d0                	mov    %edx,%eax
 80491a5:	5b                   	pop    %ebx
 80491a6:	5e                   	pop    %esi
 80491a7:	5f                   	pop    %edi
 80491a8:	c3                   	ret    

080491a9 <initialize_bomb>:
 80491a9:	56                   	push   %esi
 80491aa:	53                   	push   %ebx
 80491ab:	81 ec 5c 20 00 00    	sub    $0x205c,%esp
 80491b1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80491b7:	89 84 24 54 20 00 00 	mov    %eax,0x2054(%esp)
 80491be:	31 c0                	xor    %eax,%eax
 80491c0:	68 ac 90 04 08       	push   $0x80490ac
 80491c5:	6a 02                	push   $0x2
 80491c7:	e8 04 f6 ff ff       	call   80487d0 <signal@plt>
 80491cc:	83 c4 08             	add    $0x8,%esp
 80491cf:	6a 40                	push   $0x40
 80491d1:	8d 44 24 18          	lea    0x18(%esp),%eax
 80491d5:	50                   	push   %eax
 80491d6:	e8 45 f6 ff ff       	call   8048820 <gethostname@plt>
 80491db:	83 c4 10             	add    $0x10,%esp
 80491de:	85 c0                	test   %eax,%eax
 80491e0:	75 14                	jne    80491f6 <initialize_bomb+0x4d>
 80491e2:	a1 c0 d5 04 08       	mov    0x804d5c0,%eax
 80491e7:	bb c4 d5 04 08       	mov    $0x804d5c4,%ebx
 80491ec:	8d 74 24 0c          	lea    0xc(%esp),%esi
 80491f0:	85 c0                	test   %eax,%eax
 80491f2:	75 1b                	jne    804920f <initialize_bomb+0x66>
 80491f4:	eb 56                	jmp    804924c <initialize_bomb+0xa3>
 80491f6:	83 ec 0c             	sub    $0xc,%esp
 80491f9:	68 18 a4 04 08       	push   $0x804a418
 80491fe:	e8 4d f6 ff ff       	call   8048850 <puts@plt>
 8049203:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804920a:	e8 61 f6 ff ff       	call   8048870 <exit@plt>
 804920f:	83 ec 08             	sub    $0x8,%esp
 8049212:	56                   	push   %esi
 8049213:	50                   	push   %eax
 8049214:	e8 87 f6 ff ff       	call   80488a0 <strcasecmp@plt>
 8049219:	83 c4 10             	add    $0x10,%esp
 804921c:	85 c0                	test   %eax,%eax
 804921e:	74 45                	je     8049265 <initialize_bomb+0xbc>
 8049220:	83 c3 04             	add    $0x4,%ebx
 8049223:	8b 43 fc             	mov    -0x4(%ebx),%eax
 8049226:	85 c0                	test   %eax,%eax
 8049228:	75 e5                	jne    804920f <initialize_bomb+0x66>
 804922a:	eb 20                	jmp    804924c <initialize_bomb+0xa3>
 804922c:	83 ec 04             	sub    $0x4,%esp
 804922f:	8d 44 24 50          	lea    0x50(%esp),%eax
 8049233:	50                   	push   %eax
 8049234:	68 5e a5 04 08       	push   $0x804a55e
 8049239:	6a 01                	push   $0x1
 804923b:	e8 a0 f6 ff ff       	call   80488e0 <__printf_chk@plt>
 8049240:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049247:	e8 24 f6 ff ff       	call   8048870 <exit@plt>
 804924c:	83 ec 0c             	sub    $0xc,%esp
 804924f:	68 50 a4 04 08       	push   $0x804a450
 8049254:	e8 f7 f5 ff ff       	call   8048850 <puts@plt>
 8049259:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049260:	e8 0b f6 ff ff       	call   8048870 <exit@plt>
 8049265:	83 ec 0c             	sub    $0xc,%esp
 8049268:	8d 44 24 58          	lea    0x58(%esp),%eax
 804926c:	50                   	push   %eax
 804926d:	e8 29 0c 00 00       	call   8049e9b <init_driver>
 8049272:	83 c4 10             	add    $0x10,%esp
 8049275:	85 c0                	test   %eax,%eax
 8049277:	78 b3                	js     804922c <initialize_bomb+0x83>
 8049279:	8b 84 24 4c 20 00 00 	mov    0x204c(%esp),%eax
 8049280:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049287:	74 05                	je     804928e <initialize_bomb+0xe5>
 8049289:	e8 72 f5 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804928e:	81 c4 54 20 00 00    	add    $0x2054,%esp
 8049294:	5b                   	pop    %ebx
 8049295:	5e                   	pop    %esi
 8049296:	c3                   	ret    

08049297 <initialize_bomb_solve>:
 8049297:	f3 c3                	repz ret 

08049299 <blank_line>:
 8049299:	56                   	push   %esi
 804929a:	53                   	push   %ebx
 804929b:	83 ec 04             	sub    $0x4,%esp
 804929e:	8b 74 24 10          	mov    0x10(%esp),%esi
 80492a2:	eb 14                	jmp    80492b8 <blank_line+0x1f>
 80492a4:	e8 a7 f6 ff ff       	call   8048950 <__ctype_b_loc@plt>
 80492a9:	83 c6 01             	add    $0x1,%esi
 80492ac:	0f be db             	movsbl %bl,%ebx
 80492af:	8b 00                	mov    (%eax),%eax
 80492b1:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 80492b6:	74 0e                	je     80492c6 <blank_line+0x2d>
 80492b8:	0f b6 1e             	movzbl (%esi),%ebx
 80492bb:	84 db                	test   %bl,%bl
 80492bd:	75 e5                	jne    80492a4 <blank_line+0xb>
 80492bf:	b8 01 00 00 00       	mov    $0x1,%eax
 80492c4:	eb 05                	jmp    80492cb <blank_line+0x32>
 80492c6:	b8 00 00 00 00       	mov    $0x0,%eax
 80492cb:	83 c4 04             	add    $0x4,%esp
 80492ce:	5b                   	pop    %ebx
 80492cf:	5e                   	pop    %esi
 80492d0:	c3                   	ret    

080492d1 <skip>:
 80492d1:	53                   	push   %ebx
 80492d2:	83 ec 08             	sub    $0x8,%esp
 80492d5:	83 ec 04             	sub    $0x4,%esp
 80492d8:	ff 35 f0 d7 04 08    	pushl  0x804d7f0
 80492de:	6a 50                	push   $0x50
 80492e0:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 80492e5:	8d 04 80             	lea    (%eax,%eax,4),%eax
 80492e8:	c1 e0 04             	shl    $0x4,%eax
 80492eb:	05 00 d8 04 08       	add    $0x804d800,%eax
 80492f0:	50                   	push   %eax
 80492f1:	e8 ca f4 ff ff       	call   80487c0 <fgets@plt>
 80492f6:	89 c3                	mov    %eax,%ebx
 80492f8:	83 c4 10             	add    $0x10,%esp
 80492fb:	85 c0                	test   %eax,%eax
 80492fd:	74 10                	je     804930f <skip+0x3e>
 80492ff:	83 ec 0c             	sub    $0xc,%esp
 8049302:	50                   	push   %eax
 8049303:	e8 91 ff ff ff       	call   8049299 <blank_line>
 8049308:	83 c4 10             	add    $0x10,%esp
 804930b:	85 c0                	test   %eax,%eax
 804930d:	75 c6                	jne    80492d5 <skip+0x4>
 804930f:	89 d8                	mov    %ebx,%eax
 8049311:	83 c4 08             	add    $0x8,%esp
 8049314:	5b                   	pop    %ebx
 8049315:	c3                   	ret    

08049316 <send_msg>:
 8049316:	57                   	push   %edi
 8049317:	53                   	push   %ebx
 8049318:	81 ec 14 40 00 00    	sub    $0x4014,%esp
 804931e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049324:	89 84 24 0c 40 00 00 	mov    %eax,0x400c(%esp)
 804932b:	31 c0                	xor    %eax,%eax
 804932d:	8b 1d ec d7 04 08    	mov    0x804d7ec,%ebx
 8049333:	8d 54 9b fb          	lea    -0x5(%ebx,%ebx,4),%edx
 8049337:	c1 e2 04             	shl    $0x4,%edx
 804933a:	81 c2 00 d8 04 08    	add    $0x804d800,%edx
 8049340:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049345:	89 d7                	mov    %edx,%edi
 8049347:	f2 ae                	repnz scas %es:(%edi),%al
 8049349:	f7 d1                	not    %ecx
 804934b:	83 c1 63             	add    $0x63,%ecx
 804934e:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 8049354:	76 1b                	jbe    8049371 <send_msg+0x5b>
 8049356:	83 ec 08             	sub    $0x8,%esp
 8049359:	68 88 a4 04 08       	push   $0x804a488
 804935e:	6a 01                	push   $0x1
 8049360:	e8 7b f5 ff ff       	call   80488e0 <__printf_chk@plt>
 8049365:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804936c:	e8 ff f4 ff ff       	call   8048870 <exit@plt>
 8049371:	83 bc 24 20 40 00 00 	cmpl   $0x0,0x4020(%esp)
 8049378:	00 
 8049379:	b9 80 a5 04 08       	mov    $0x804a580,%ecx
 804937e:	b8 78 a5 04 08       	mov    $0x804a578,%eax
 8049383:	0f 44 c1             	cmove  %ecx,%eax
 8049386:	52                   	push   %edx
 8049387:	53                   	push   %ebx
 8049388:	50                   	push   %eax
 8049389:	ff 35 a0 d5 04 08    	pushl  0x804d5a0
 804938f:	68 89 a5 04 08       	push   $0x804a589
 8049394:	68 00 20 00 00       	push   $0x2000
 8049399:	6a 01                	push   $0x1
 804939b:	8d 5c 24 28          	lea    0x28(%esp),%ebx
 804939f:	53                   	push   %ebx
 80493a0:	e8 bb f5 ff ff       	call   8048960 <__sprintf_chk@plt>
 80493a5:	83 c4 20             	add    $0x20,%esp
 80493a8:	8d 84 24 0c 20 00 00 	lea    0x200c(%esp),%eax
 80493af:	50                   	push   %eax
 80493b0:	6a 00                	push   $0x0
 80493b2:	53                   	push   %ebx
 80493b3:	68 a0 d1 04 08       	push   $0x804d1a0
 80493b8:	e8 b0 0c 00 00       	call   804a06d <driver_post>
 80493bd:	83 c4 10             	add    $0x10,%esp
 80493c0:	85 c0                	test   %eax,%eax
 80493c2:	79 1c                	jns    80493e0 <send_msg+0xca>
 80493c4:	83 ec 0c             	sub    $0xc,%esp
 80493c7:	8d 84 24 18 20 00 00 	lea    0x2018(%esp),%eax
 80493ce:	50                   	push   %eax
 80493cf:	e8 7c f4 ff ff       	call   8048850 <puts@plt>
 80493d4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80493db:	e8 90 f4 ff ff       	call   8048870 <exit@plt>
 80493e0:	8b 84 24 0c 40 00 00 	mov    0x400c(%esp),%eax
 80493e7:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80493ee:	74 05                	je     80493f5 <send_msg+0xdf>
 80493f0:	e8 0b f4 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80493f5:	81 c4 14 40 00 00    	add    $0x4014,%esp
 80493fb:	5b                   	pop    %ebx
 80493fc:	5f                   	pop    %edi
 80493fd:	c3                   	ret    

080493fe <explode_bomb>:
 80493fe:	83 ec 18             	sub    $0x18,%esp
 8049401:	68 95 a5 04 08       	push   $0x804a595
 8049406:	e8 45 f4 ff ff       	call   8048850 <puts@plt>
 804940b:	c7 04 24 9e a5 04 08 	movl   $0x804a59e,(%esp)
 8049412:	e8 39 f4 ff ff       	call   8048850 <puts@plt>
 8049417:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804941e:	e8 f3 fe ff ff       	call   8049316 <send_msg>
 8049423:	c7 04 24 ac a4 04 08 	movl   $0x804a4ac,(%esp)
 804942a:	e8 21 f4 ff ff       	call   8048850 <puts@plt>
 804942f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049436:	e8 35 f4 ff ff       	call   8048870 <exit@plt>

0804943b <read_six_numbers>:
 804943b:	83 ec 0c             	sub    $0xc,%esp
 804943e:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049442:	8d 50 14             	lea    0x14(%eax),%edx
 8049445:	52                   	push   %edx
 8049446:	8d 50 10             	lea    0x10(%eax),%edx
 8049449:	52                   	push   %edx
 804944a:	8d 50 0c             	lea    0xc(%eax),%edx
 804944d:	52                   	push   %edx
 804944e:	8d 50 08             	lea    0x8(%eax),%edx
 8049451:	52                   	push   %edx
 8049452:	8d 50 04             	lea    0x4(%eax),%edx
 8049455:	52                   	push   %edx
 8049456:	50                   	push   %eax
 8049457:	68 b5 a5 04 08       	push   $0x804a5b5
 804945c:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049460:	e8 4b f4 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049465:	83 c4 20             	add    $0x20,%esp
 8049468:	83 f8 05             	cmp    $0x5,%eax
 804946b:	7f 05                	jg     8049472 <read_six_numbers+0x37>
 804946d:	e8 8c ff ff ff       	call   80493fe <explode_bomb>
 8049472:	83 c4 0c             	add    $0xc,%esp
 8049475:	c3                   	ret    

08049476 <read_line>:
 8049476:	57                   	push   %edi
 8049477:	56                   	push   %esi
 8049478:	53                   	push   %ebx
 8049479:	e8 53 fe ff ff       	call   80492d1 <skip>
 804947e:	85 c0                	test   %eax,%eax
 8049480:	75 70                	jne    80494f2 <read_line+0x7c>
 8049482:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8049487:	39 05 f0 d7 04 08    	cmp    %eax,0x804d7f0
 804948d:	75 19                	jne    80494a8 <read_line+0x32>
 804948f:	83 ec 0c             	sub    $0xc,%esp
 8049492:	68 c7 a5 04 08       	push   $0x804a5c7
 8049497:	e8 b4 f3 ff ff       	call   8048850 <puts@plt>
 804949c:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80494a3:	e8 c8 f3 ff ff       	call   8048870 <exit@plt>
 80494a8:	83 ec 0c             	sub    $0xc,%esp
 80494ab:	68 e5 a5 04 08       	push   $0x804a5e5
 80494b0:	e8 7b f3 ff ff       	call   8048830 <getenv@plt>
 80494b5:	83 c4 10             	add    $0x10,%esp
 80494b8:	85 c0                	test   %eax,%eax
 80494ba:	74 0a                	je     80494c6 <read_line+0x50>
 80494bc:	83 ec 0c             	sub    $0xc,%esp
 80494bf:	6a 00                	push   $0x0
 80494c1:	e8 aa f3 ff ff       	call   8048870 <exit@plt>
 80494c6:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 80494cb:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 80494d0:	e8 fc fd ff ff       	call   80492d1 <skip>
 80494d5:	85 c0                	test   %eax,%eax
 80494d7:	75 19                	jne    80494f2 <read_line+0x7c>
 80494d9:	83 ec 0c             	sub    $0xc,%esp
 80494dc:	68 c7 a5 04 08       	push   $0x804a5c7
 80494e1:	e8 6a f3 ff ff       	call   8048850 <puts@plt>
 80494e6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80494ed:	e8 7e f3 ff ff       	call   8048870 <exit@plt>
 80494f2:	8b 15 ec d7 04 08    	mov    0x804d7ec,%edx
 80494f8:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 80494fb:	c1 e3 04             	shl    $0x4,%ebx
 80494fe:	81 c3 00 d8 04 08    	add    $0x804d800,%ebx
 8049504:	b8 00 00 00 00       	mov    $0x0,%eax
 8049509:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804950e:	89 df                	mov    %ebx,%edi
 8049510:	f2 ae                	repnz scas %es:(%edi),%al
 8049512:	f7 d1                	not    %ecx
 8049514:	83 e9 01             	sub    $0x1,%ecx
 8049517:	83 f9 4e             	cmp    $0x4e,%ecx
 804951a:	7e 36                	jle    8049552 <read_line+0xdc>
 804951c:	83 ec 0c             	sub    $0xc,%esp
 804951f:	68 f0 a5 04 08       	push   $0x804a5f0
 8049524:	e8 27 f3 ff ff       	call   8048850 <puts@plt>
 8049529:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 804952e:	8d 50 01             	lea    0x1(%eax),%edx
 8049531:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 8049537:	6b c0 50             	imul   $0x50,%eax,%eax
 804953a:	05 00 d8 04 08       	add    $0x804d800,%eax
 804953f:	be 0b a6 04 08       	mov    $0x804a60b,%esi
 8049544:	b9 04 00 00 00       	mov    $0x4,%ecx
 8049549:	89 c7                	mov    %eax,%edi
 804954b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804954d:	e8 ac fe ff ff       	call   80493fe <explode_bomb>
 8049552:	8d 04 92             	lea    (%edx,%edx,4),%eax
 8049555:	c1 e0 04             	shl    $0x4,%eax
 8049558:	c6 84 01 ff d7 04 08 	movb   $0x0,0x804d7ff(%ecx,%eax,1)
 804955f:	00 
 8049560:	83 c2 01             	add    $0x1,%edx
 8049563:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 8049569:	89 d8                	mov    %ebx,%eax
 804956b:	5b                   	pop    %ebx
 804956c:	5e                   	pop    %esi
 804956d:	5f                   	pop    %edi
 804956e:	c3                   	ret    

0804956f <phase_defused>:
 804956f:	83 ec 18             	sub    $0x18,%esp
 8049572:	6a 01                	push   $0x1
 8049574:	e8 9d fd ff ff       	call   8049316 <send_msg>
 8049579:	83 c4 10             	add    $0x10,%esp
 804957c:	83 3d ec d7 04 08 09 	cmpl   $0x9,0x804d7ec
 8049583:	75 1c                	jne    80495a1 <phase_defused+0x32>
 8049585:	83 ec 0c             	sub    $0xc,%esp
 8049588:	68 d0 a4 04 08       	push   $0x804a4d0
 804958d:	e8 be f2 ff ff       	call   8048850 <puts@plt>
 8049592:	c7 04 24 fc a4 04 08 	movl   $0x804a4fc,(%esp)
 8049599:	e8 b2 f2 ff ff       	call   8048850 <puts@plt>
 804959e:	83 c4 10             	add    $0x10,%esp
 80495a1:	83 c4 0c             	add    $0xc,%esp
 80495a4:	c3                   	ret    

080495a5 <sigalrm_handler>:
 80495a5:	83 ec 0c             	sub    $0xc,%esp
 80495a8:	6a 00                	push   $0x0
 80495aa:	68 04 aa 04 08       	push   $0x804aa04
 80495af:	6a 01                	push   $0x1
 80495b1:	ff 35 c0 d7 04 08    	pushl  0x804d7c0
 80495b7:	e8 44 f3 ff ff       	call   8048900 <__fprintf_chk@plt>
 80495bc:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80495c3:	e8 a8 f2 ff ff       	call   8048870 <exit@plt>

080495c8 <rio_readlineb>:
 80495c8:	55                   	push   %ebp
 80495c9:	57                   	push   %edi
 80495ca:	56                   	push   %esi
 80495cb:	53                   	push   %ebx
 80495cc:	83 ec 2c             	sub    $0x2c,%esp
 80495cf:	89 d7                	mov    %edx,%edi
 80495d1:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80495d5:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 80495dc:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 80495e0:	31 d2                	xor    %edx,%edx
 80495e2:	83 f9 01             	cmp    $0x1,%ecx
 80495e5:	76 79                	jbe    8049660 <rio_readlineb+0x98>
 80495e7:	89 c3                	mov    %eax,%ebx
 80495e9:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80495ed:	bd 01 00 00 00       	mov    $0x1,%ebp
 80495f2:	8d 73 0c             	lea    0xc(%ebx),%esi
 80495f5:	eb 2d                	jmp    8049624 <rio_readlineb+0x5c>
 80495f7:	83 ec 04             	sub    $0x4,%esp
 80495fa:	68 00 20 00 00       	push   $0x2000
 80495ff:	56                   	push   %esi
 8049600:	ff 33                	pushl  (%ebx)
 8049602:	e8 99 f1 ff ff       	call   80487a0 <read@plt>
 8049607:	89 43 04             	mov    %eax,0x4(%ebx)
 804960a:	83 c4 10             	add    $0x10,%esp
 804960d:	85 c0                	test   %eax,%eax
 804960f:	79 0c                	jns    804961d <rio_readlineb+0x55>
 8049611:	e8 ba f2 ff ff       	call   80488d0 <__errno_location@plt>
 8049616:	83 38 04             	cmpl   $0x4,(%eax)
 8049619:	74 09                	je     8049624 <rio_readlineb+0x5c>
 804961b:	eb 62                	jmp    804967f <rio_readlineb+0xb7>
 804961d:	85 c0                	test   %eax,%eax
 804961f:	74 63                	je     8049684 <rio_readlineb+0xbc>
 8049621:	89 73 08             	mov    %esi,0x8(%ebx)
 8049624:	8b 43 04             	mov    0x4(%ebx),%eax
 8049627:	85 c0                	test   %eax,%eax
 8049629:	7e cc                	jle    80495f7 <rio_readlineb+0x2f>
 804962b:	8b 4b 08             	mov    0x8(%ebx),%ecx
 804962e:	0f b6 11             	movzbl (%ecx),%edx
 8049631:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 8049635:	83 c1 01             	add    $0x1,%ecx
 8049638:	89 4b 08             	mov    %ecx,0x8(%ebx)
 804963b:	83 e8 01             	sub    $0x1,%eax
 804963e:	89 43 04             	mov    %eax,0x4(%ebx)
 8049641:	83 c7 01             	add    $0x1,%edi
 8049644:	88 57 ff             	mov    %dl,-0x1(%edi)
 8049647:	80 fa 0a             	cmp    $0xa,%dl
 804964a:	75 09                	jne    8049655 <rio_readlineb+0x8d>
 804964c:	eb 1d                	jmp    804966b <rio_readlineb+0xa3>
 804964e:	83 fd 01             	cmp    $0x1,%ebp
 8049651:	75 18                	jne    804966b <rio_readlineb+0xa3>
 8049653:	eb 1b                	jmp    8049670 <rio_readlineb+0xa8>
 8049655:	83 c5 01             	add    $0x1,%ebp
 8049658:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 804965c:	74 09                	je     8049667 <rio_readlineb+0x9f>
 804965e:	eb c4                	jmp    8049624 <rio_readlineb+0x5c>
 8049660:	bd 01 00 00 00       	mov    $0x1,%ebp
 8049665:	eb 04                	jmp    804966b <rio_readlineb+0xa3>
 8049667:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 804966b:	c6 07 00             	movb   $0x0,(%edi)
 804966e:	89 e8                	mov    %ebp,%eax
 8049670:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8049674:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804967b:	74 17                	je     8049694 <rio_readlineb+0xcc>
 804967d:	eb 10                	jmp    804968f <rio_readlineb+0xc7>
 804967f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049684:	85 c0                	test   %eax,%eax
 8049686:	74 c6                	je     804964e <rio_readlineb+0x86>
 8049688:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804968d:	eb e1                	jmp    8049670 <rio_readlineb+0xa8>
 804968f:	e8 6c f1 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049694:	83 c4 2c             	add    $0x2c,%esp
 8049697:	5b                   	pop    %ebx
 8049698:	5e                   	pop    %esi
 8049699:	5f                   	pop    %edi
 804969a:	5d                   	pop    %ebp
 804969b:	c3                   	ret    

0804969c <submitr>:
 804969c:	55                   	push   %ebp
 804969d:	57                   	push   %edi
 804969e:	56                   	push   %esi
 804969f:	53                   	push   %ebx
 80496a0:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 80496a6:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 80496ad:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 80496b4:	89 44 24 10          	mov    %eax,0x10(%esp)
 80496b8:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 80496bf:	89 44 24 14          	mov    %eax,0x14(%esp)
 80496c3:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 80496ca:	89 44 24 18          	mov    %eax,0x18(%esp)
 80496ce:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 80496d5:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 80496dc:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80496e0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80496e6:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 80496ed:	31 c0                	xor    %eax,%eax
 80496ef:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80496f6:	00 
 80496f7:	6a 00                	push   $0x0
 80496f9:	6a 01                	push   $0x1
 80496fb:	6a 02                	push   $0x2
 80496fd:	e8 ee f1 ff ff       	call   80488f0 <socket@plt>
 8049702:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049706:	83 c4 10             	add    $0x10,%esp
 8049709:	85 c0                	test   %eax,%eax
 804970b:	79 52                	jns    804975f <submitr+0xc3>
 804970d:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049711:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049717:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 804971e:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049725:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 804972c:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049733:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804973a:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 8049741:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 8049748:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 804974f:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 8049755:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804975a:	e9 3f 06 00 00       	jmp    8049d9e <submitr+0x702>
 804975f:	83 ec 0c             	sub    $0xc,%esp
 8049762:	56                   	push   %esi
 8049763:	e8 a8 f1 ff ff       	call   8048910 <gethostbyname@plt>
 8049768:	83 c4 10             	add    $0x10,%esp
 804976b:	85 c0                	test   %eax,%eax
 804976d:	75 73                	jne    80497e2 <submitr+0x146>
 804976f:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049773:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049779:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 8049780:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 8049787:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 804978e:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049795:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804979c:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 80497a3:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 80497aa:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80497b1:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 80497b8:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 80497bf:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 80497c5:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 80497c9:	83 ec 0c             	sub    $0xc,%esp
 80497cc:	ff 74 24 14          	pushl  0x14(%esp)
 80497d0:	e8 6b f1 ff ff       	call   8048940 <close@plt>
 80497d5:	83 c4 10             	add    $0x10,%esp
 80497d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80497dd:	e9 bc 05 00 00       	jmp    8049d9e <submitr+0x702>
 80497e2:	8d 74 24 30          	lea    0x30(%esp),%esi
 80497e6:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80497ed:	00 
 80497ee:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 80497f5:	00 
 80497f6:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 80497fd:	00 
 80497fe:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 8049805:	00 
 8049806:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 804980d:	6a 0c                	push   $0xc
 804980f:	ff 70 0c             	pushl  0xc(%eax)
 8049812:	8b 40 10             	mov    0x10(%eax),%eax
 8049815:	ff 30                	pushl  (%eax)
 8049817:	8d 44 24 40          	lea    0x40(%esp),%eax
 804981b:	50                   	push   %eax
 804981c:	e8 3f f0 ff ff       	call   8048860 <__memmove_chk@plt>
 8049821:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 8049828:	00 
 8049829:	66 c1 c8 08          	ror    $0x8,%ax
 804982d:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 8049832:	83 c4 0c             	add    $0xc,%esp
 8049835:	6a 10                	push   $0x10
 8049837:	56                   	push   %esi
 8049838:	ff 74 24 14          	pushl  0x14(%esp)
 804983c:	e8 ef f0 ff ff       	call   8048930 <connect@plt>
 8049841:	83 c4 10             	add    $0x10,%esp
 8049844:	85 c0                	test   %eax,%eax
 8049846:	79 65                	jns    80498ad <submitr+0x211>
 8049848:	8b 44 24 18          	mov    0x18(%esp),%eax
 804984c:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049852:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 8049859:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 8049860:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 8049867:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 804986e:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 8049875:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 804987c:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 8049883:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 804988a:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 8049890:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 8049894:	83 ec 0c             	sub    $0xc,%esp
 8049897:	ff 74 24 14          	pushl  0x14(%esp)
 804989b:	e8 a0 f0 ff ff       	call   8048940 <close@plt>
 80498a0:	83 c4 10             	add    $0x10,%esp
 80498a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80498a8:	e9 f1 04 00 00       	jmp    8049d9e <submitr+0x702>
 80498ad:	be ff ff ff ff       	mov    $0xffffffff,%esi
 80498b2:	b8 00 00 00 00       	mov    $0x0,%eax
 80498b7:	89 f1                	mov    %esi,%ecx
 80498b9:	89 df                	mov    %ebx,%edi
 80498bb:	f2 ae                	repnz scas %es:(%edi),%al
 80498bd:	f7 d1                	not    %ecx
 80498bf:	89 cd                	mov    %ecx,%ebp
 80498c1:	89 f1                	mov    %esi,%ecx
 80498c3:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 80498c7:	f2 ae                	repnz scas %es:(%edi),%al
 80498c9:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 80498cd:	89 f1                	mov    %esi,%ecx
 80498cf:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80498d3:	f2 ae                	repnz scas %es:(%edi),%al
 80498d5:	89 ca                	mov    %ecx,%edx
 80498d7:	f7 d2                	not    %edx
 80498d9:	89 f1                	mov    %esi,%ecx
 80498db:	8b 7c 24 14          	mov    0x14(%esp),%edi
 80498df:	f2 ae                	repnz scas %es:(%edi),%al
 80498e1:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 80498e5:	29 ca                	sub    %ecx,%edx
 80498e7:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 80498eb:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 80498ef:	3d 00 20 00 00       	cmp    $0x2000,%eax
 80498f4:	76 7e                	jbe    8049974 <submitr+0x2d8>
 80498f6:	8b 44 24 18          	mov    0x18(%esp),%eax
 80498fa:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049900:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 8049907:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 804990e:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 8049915:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 804991c:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 8049923:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 804992a:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 8049931:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 8049938:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 804993f:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 8049946:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 804994d:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 8049954:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 804995b:	83 ec 0c             	sub    $0xc,%esp
 804995e:	ff 74 24 14          	pushl  0x14(%esp)
 8049962:	e8 d9 ef ff ff       	call   8048940 <close@plt>
 8049967:	83 c4 10             	add    $0x10,%esp
 804996a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804996f:	e9 2a 04 00 00       	jmp    8049d9e <submitr+0x702>
 8049974:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 804997b:	b9 00 08 00 00       	mov    $0x800,%ecx
 8049980:	b8 00 00 00 00       	mov    $0x0,%eax
 8049985:	89 d7                	mov    %edx,%edi
 8049987:	f3 ab                	rep stos %eax,%es:(%edi)
 8049989:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804998e:	89 df                	mov    %ebx,%edi
 8049990:	f2 ae                	repnz scas %es:(%edi),%al
 8049992:	f7 d1                	not    %ecx
 8049994:	89 ce                	mov    %ecx,%esi
 8049996:	83 ee 01             	sub    $0x1,%esi
 8049999:	0f 84 5c 04 00 00    	je     8049dfb <submitr+0x75f>
 804999f:	89 d5                	mov    %edx,%ebp
 80499a1:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 80499a6:	0f b6 13             	movzbl (%ebx),%edx
 80499a9:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 80499ac:	b8 01 00 00 00       	mov    $0x1,%eax
 80499b1:	80 f9 0f             	cmp    $0xf,%cl
 80499b4:	77 0a                	ja     80499c0 <submitr+0x324>
 80499b6:	89 f8                	mov    %edi,%eax
 80499b8:	d3 e8                	shr    %cl,%eax
 80499ba:	83 f0 01             	xor    $0x1,%eax
 80499bd:	83 e0 01             	and    $0x1,%eax
 80499c0:	80 fa 5f             	cmp    $0x5f,%dl
 80499c3:	0f 94 c1             	sete   %cl
 80499c6:	38 c1                	cmp    %al,%cl
 80499c8:	73 0c                	jae    80499d6 <submitr+0x33a>
 80499ca:	89 d0                	mov    %edx,%eax
 80499cc:	83 e0 df             	and    $0xffffffdf,%eax
 80499cf:	83 e8 41             	sub    $0x41,%eax
 80499d2:	3c 19                	cmp    $0x19,%al
 80499d4:	77 08                	ja     80499de <submitr+0x342>
 80499d6:	88 55 00             	mov    %dl,0x0(%ebp)
 80499d9:	8d 6d 01             	lea    0x1(%ebp),%ebp
 80499dc:	eb 62                	jmp    8049a40 <submitr+0x3a4>
 80499de:	80 fa 20             	cmp    $0x20,%dl
 80499e1:	75 09                	jne    80499ec <submitr+0x350>
 80499e3:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 80499e7:	8d 6d 01             	lea    0x1(%ebp),%ebp
 80499ea:	eb 54                	jmp    8049a40 <submitr+0x3a4>
 80499ec:	8d 42 e0             	lea    -0x20(%edx),%eax
 80499ef:	3c 5f                	cmp    $0x5f,%al
 80499f1:	76 09                	jbe    80499fc <submitr+0x360>
 80499f3:	80 fa 09             	cmp    $0x9,%dl
 80499f6:	0f 85 bb 03 00 00    	jne    8049db7 <submitr+0x71b>
 80499fc:	83 ec 0c             	sub    $0xc,%esp
 80499ff:	0f b6 d2             	movzbl %dl,%edx
 8049a02:	52                   	push   %edx
 8049a03:	68 10 ab 04 08       	push   $0x804ab10
 8049a08:	6a 08                	push   $0x8
 8049a0a:	6a 01                	push   $0x1
 8049a0c:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 8049a13:	50                   	push   %eax
 8049a14:	e8 47 ef ff ff       	call   8048960 <__sprintf_chk@plt>
 8049a19:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049a20:	00 
 8049a21:	88 45 00             	mov    %al,0x0(%ebp)
 8049a24:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049a2b:	00 
 8049a2c:	88 45 01             	mov    %al,0x1(%ebp)
 8049a2f:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049a36:	00 
 8049a37:	88 45 02             	mov    %al,0x2(%ebp)
 8049a3a:	83 c4 20             	add    $0x20,%esp
 8049a3d:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049a40:	83 c3 01             	add    $0x1,%ebx
 8049a43:	83 ee 01             	sub    $0x1,%esi
 8049a46:	0f 85 5a ff ff ff    	jne    80499a6 <submitr+0x30a>
 8049a4c:	e9 aa 03 00 00       	jmp    8049dfb <submitr+0x75f>
 8049a51:	83 ec 04             	sub    $0x4,%esp
 8049a54:	53                   	push   %ebx
 8049a55:	56                   	push   %esi
 8049a56:	55                   	push   %ebp
 8049a57:	e8 34 ee ff ff       	call   8048890 <write@plt>
 8049a5c:	83 c4 10             	add    $0x10,%esp
 8049a5f:	85 c0                	test   %eax,%eax
 8049a61:	7f 0f                	jg     8049a72 <submitr+0x3d6>
 8049a63:	e8 68 ee ff ff       	call   80488d0 <__errno_location@plt>
 8049a68:	83 38 04             	cmpl   $0x4,(%eax)
 8049a6b:	75 0f                	jne    8049a7c <submitr+0x3e0>
 8049a6d:	b8 00 00 00 00       	mov    $0x0,%eax
 8049a72:	01 c6                	add    %eax,%esi
 8049a74:	29 c3                	sub    %eax,%ebx
 8049a76:	75 d9                	jne    8049a51 <submitr+0x3b5>
 8049a78:	85 ff                	test   %edi,%edi
 8049a7a:	79 69                	jns    8049ae5 <submitr+0x449>
 8049a7c:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049a80:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049a86:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049a8d:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049a94:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049a9b:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049aa2:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049aa9:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 8049ab0:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 8049ab7:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 8049abe:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 8049ac5:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049acc:	83 ec 0c             	sub    $0xc,%esp
 8049acf:	ff 74 24 14          	pushl  0x14(%esp)
 8049ad3:	e8 68 ee ff ff       	call   8048940 <close@plt>
 8049ad8:	83 c4 10             	add    $0x10,%esp
 8049adb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ae0:	e9 b9 02 00 00       	jmp    8049d9e <submitr+0x702>
 8049ae5:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049ae9:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049aed:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049af4:	00 
 8049af5:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049af9:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049afd:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049b02:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049b09:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049b0d:	e8 b6 fa ff ff       	call   80495c8 <rio_readlineb>
 8049b12:	85 c0                	test   %eax,%eax
 8049b14:	7f 7d                	jg     8049b93 <submitr+0x4f7>
 8049b16:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049b1a:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049b20:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049b27:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049b2e:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049b35:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049b3c:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049b43:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049b4a:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 8049b51:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049b58:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049b5f:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 8049b66:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 8049b6d:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 8049b74:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 8049b7a:	83 ec 0c             	sub    $0xc,%esp
 8049b7d:	ff 74 24 14          	pushl  0x14(%esp)
 8049b81:	e8 ba ed ff ff       	call   8048940 <close@plt>
 8049b86:	83 c4 10             	add    $0x10,%esp
 8049b89:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b8e:	e9 0b 02 00 00       	jmp    8049d9e <submitr+0x702>
 8049b93:	83 ec 0c             	sub    $0xc,%esp
 8049b96:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 8049b9d:	50                   	push   %eax
 8049b9e:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8049ba2:	50                   	push   %eax
 8049ba3:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 8049baa:	50                   	push   %eax
 8049bab:	68 17 ab 04 08       	push   $0x804ab17
 8049bb0:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 8049bb7:	50                   	push   %eax
 8049bb8:	e8 f3 ec ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049bbd:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8049bc1:	83 c4 20             	add    $0x20,%esp
 8049bc4:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049bc9:	0f 84 c4 00 00 00    	je     8049c93 <submitr+0x5f7>
 8049bcf:	83 ec 08             	sub    $0x8,%esp
 8049bd2:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049bd9:	52                   	push   %edx
 8049bda:	50                   	push   %eax
 8049bdb:	68 28 aa 04 08       	push   $0x804aa28
 8049be0:	6a ff                	push   $0xffffffff
 8049be2:	6a 01                	push   $0x1
 8049be4:	ff 74 24 34          	pushl  0x34(%esp)
 8049be8:	e8 73 ed ff ff       	call   8048960 <__sprintf_chk@plt>
 8049bed:	83 c4 14             	add    $0x14,%esp
 8049bf0:	ff 74 24 14          	pushl  0x14(%esp)
 8049bf4:	e8 47 ed ff ff       	call   8048940 <close@plt>
 8049bf9:	83 c4 10             	add    $0x10,%esp
 8049bfc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c01:	e9 98 01 00 00       	jmp    8049d9e <submitr+0x702>
 8049c06:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049c0b:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049c12:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049c16:	e8 ad f9 ff ff       	call   80495c8 <rio_readlineb>
 8049c1b:	85 c0                	test   %eax,%eax
 8049c1d:	7f 74                	jg     8049c93 <submitr+0x5f7>
 8049c1f:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049c23:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049c29:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049c30:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049c37:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049c3e:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049c45:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049c4c:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049c53:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049c5a:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049c61:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049c68:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049c6f:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 8049c76:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 8049c7a:	83 ec 0c             	sub    $0xc,%esp
 8049c7d:	ff 74 24 14          	pushl  0x14(%esp)
 8049c81:	e8 ba ec ff ff       	call   8048940 <close@plt>
 8049c86:	83 c4 10             	add    $0x10,%esp
 8049c89:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c8e:	e9 0b 01 00 00       	jmp    8049d9e <submitr+0x702>
 8049c93:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 8049c9a:	0d 
 8049c9b:	0f 85 65 ff ff ff    	jne    8049c06 <submitr+0x56a>
 8049ca1:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 8049ca8:	0a 
 8049ca9:	0f 85 57 ff ff ff    	jne    8049c06 <submitr+0x56a>
 8049caf:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 8049cb6:	00 
 8049cb7:	0f 85 49 ff ff ff    	jne    8049c06 <submitr+0x56a>
 8049cbd:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049cc2:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049cc9:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049ccd:	e8 f6 f8 ff ff       	call   80495c8 <rio_readlineb>
 8049cd2:	85 c0                	test   %eax,%eax
 8049cd4:	7f 7b                	jg     8049d51 <submitr+0x6b5>
 8049cd6:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049cda:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049ce0:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049ce7:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049cee:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049cf5:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049cfc:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049d03:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049d0a:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049d11:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049d18:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049d1f:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049d26:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049d2d:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049d34:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049d3b:	83 ec 0c             	sub    $0xc,%esp
 8049d3e:	ff 74 24 14          	pushl  0x14(%esp)
 8049d42:	e8 f9 eb ff ff       	call   8048940 <close@plt>
 8049d47:	83 c4 10             	add    $0x10,%esp
 8049d4a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d4f:	eb 4d                	jmp    8049d9e <submitr+0x702>
 8049d51:	83 ec 08             	sub    $0x8,%esp
 8049d54:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049d5b:	50                   	push   %eax
 8049d5c:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049d60:	57                   	push   %edi
 8049d61:	e8 aa ea ff ff       	call   8048810 <strcpy@plt>
 8049d66:	83 c4 04             	add    $0x4,%esp
 8049d69:	ff 74 24 14          	pushl  0x14(%esp)
 8049d6d:	e8 ce eb ff ff       	call   8048940 <close@plt>
 8049d72:	0f b6 17             	movzbl (%edi),%edx
 8049d75:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049d7a:	83 c4 10             	add    $0x10,%esp
 8049d7d:	29 d0                	sub    %edx,%eax
 8049d7f:	75 13                	jne    8049d94 <submitr+0x6f8>
 8049d81:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049d85:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049d8a:	29 d0                	sub    %edx,%eax
 8049d8c:	75 06                	jne    8049d94 <submitr+0x6f8>
 8049d8e:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049d92:	f7 d8                	neg    %eax
 8049d94:	85 c0                	test   %eax,%eax
 8049d96:	0f 95 c0             	setne  %al
 8049d99:	0f b6 c0             	movzbl %al,%eax
 8049d9c:	f7 d8                	neg    %eax
 8049d9e:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049da5:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049dac:	0f 84 a9 00 00 00    	je     8049e5b <submitr+0x7bf>
 8049db2:	e9 9f 00 00 00       	jmp    8049e56 <submitr+0x7ba>
 8049db7:	a1 58 aa 04 08       	mov    0x804aa58,%eax
 8049dbc:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049dc0:	89 07                	mov    %eax,(%edi)
 8049dc2:	a1 97 aa 04 08       	mov    0x804aa97,%eax
 8049dc7:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049dca:	89 f8                	mov    %edi,%eax
 8049dcc:	83 c7 04             	add    $0x4,%edi
 8049dcf:	83 e7 fc             	and    $0xfffffffc,%edi
 8049dd2:	29 f8                	sub    %edi,%eax
 8049dd4:	be 58 aa 04 08       	mov    $0x804aa58,%esi
 8049dd9:	29 c6                	sub    %eax,%esi
 8049ddb:	83 c0 43             	add    $0x43,%eax
 8049dde:	c1 e8 02             	shr    $0x2,%eax
 8049de1:	89 c1                	mov    %eax,%ecx
 8049de3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049de5:	83 ec 0c             	sub    $0xc,%esp
 8049de8:	ff 74 24 14          	pushl  0x14(%esp)
 8049dec:	e8 4f eb ff ff       	call   8048940 <close@plt>
 8049df1:	83 c4 10             	add    $0x10,%esp
 8049df4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049df9:	eb a3                	jmp    8049d9e <submitr+0x702>
 8049dfb:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049e02:	50                   	push   %eax
 8049e03:	ff 74 24 18          	pushl  0x18(%esp)
 8049e07:	ff 74 24 18          	pushl  0x18(%esp)
 8049e0b:	ff 74 24 18          	pushl  0x18(%esp)
 8049e0f:	68 9c aa 04 08       	push   $0x804aa9c
 8049e14:	68 00 20 00 00       	push   $0x2000
 8049e19:	6a 01                	push   $0x1
 8049e1b:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049e22:	57                   	push   %edi
 8049e23:	e8 38 eb ff ff       	call   8048960 <__sprintf_chk@plt>
 8049e28:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e2d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049e32:	f2 ae                	repnz scas %es:(%edi),%al
 8049e34:	f7 d1                	not    %ecx
 8049e36:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049e39:	83 c4 20             	add    $0x20,%esp
 8049e3c:	89 fb                	mov    %edi,%ebx
 8049e3e:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049e45:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049e49:	85 ff                	test   %edi,%edi
 8049e4b:	0f 85 00 fc ff ff    	jne    8049a51 <submitr+0x3b5>
 8049e51:	e9 8f fc ff ff       	jmp    8049ae5 <submitr+0x449>
 8049e56:	e8 a5 e9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049e5b:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049e61:	5b                   	pop    %ebx
 8049e62:	5e                   	pop    %esi
 8049e63:	5f                   	pop    %edi
 8049e64:	5d                   	pop    %ebp
 8049e65:	c3                   	ret    

08049e66 <init_timeout>:
 8049e66:	53                   	push   %ebx
 8049e67:	83 ec 08             	sub    $0x8,%esp
 8049e6a:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049e6e:	85 db                	test   %ebx,%ebx
 8049e70:	74 24                	je     8049e96 <init_timeout+0x30>
 8049e72:	83 ec 08             	sub    $0x8,%esp
 8049e75:	68 a5 95 04 08       	push   $0x80495a5
 8049e7a:	6a 0e                	push   $0xe
 8049e7c:	e8 4f e9 ff ff       	call   80487d0 <signal@plt>
 8049e81:	85 db                	test   %ebx,%ebx
 8049e83:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e88:	0f 48 d8             	cmovs  %eax,%ebx
 8049e8b:	89 1c 24             	mov    %ebx,(%esp)
 8049e8e:	e8 5d e9 ff ff       	call   80487f0 <alarm@plt>
 8049e93:	83 c4 10             	add    $0x10,%esp
 8049e96:	83 c4 08             	add    $0x8,%esp
 8049e99:	5b                   	pop    %ebx
 8049e9a:	c3                   	ret    

08049e9b <init_driver>:
 8049e9b:	57                   	push   %edi
 8049e9c:	56                   	push   %esi
 8049e9d:	53                   	push   %ebx
 8049e9e:	83 ec 28             	sub    $0x28,%esp
 8049ea1:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049ea5:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049eab:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049eaf:	31 c0                	xor    %eax,%eax
 8049eb1:	6a 01                	push   $0x1
 8049eb3:	6a 0d                	push   $0xd
 8049eb5:	e8 16 e9 ff ff       	call   80487d0 <signal@plt>
 8049eba:	83 c4 08             	add    $0x8,%esp
 8049ebd:	6a 01                	push   $0x1
 8049ebf:	6a 1d                	push   $0x1d
 8049ec1:	e8 0a e9 ff ff       	call   80487d0 <signal@plt>
 8049ec6:	83 c4 08             	add    $0x8,%esp
 8049ec9:	6a 01                	push   $0x1
 8049ecb:	6a 1d                	push   $0x1d
 8049ecd:	e8 fe e8 ff ff       	call   80487d0 <signal@plt>
 8049ed2:	83 c4 0c             	add    $0xc,%esp
 8049ed5:	6a 00                	push   $0x0
 8049ed7:	6a 01                	push   $0x1
 8049ed9:	6a 02                	push   $0x2
 8049edb:	e8 10 ea ff ff       	call   80488f0 <socket@plt>
 8049ee0:	83 c4 10             	add    $0x10,%esp
 8049ee3:	85 c0                	test   %eax,%eax
 8049ee5:	79 4e                	jns    8049f35 <init_driver+0x9a>
 8049ee7:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049eed:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049ef4:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049efb:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049f02:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049f09:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049f10:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049f17:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049f1e:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049f25:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049f2b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049f30:	e9 1f 01 00 00       	jmp    804a054 <init_driver+0x1b9>
 8049f35:	89 c3                	mov    %eax,%ebx
 8049f37:	83 ec 0c             	sub    $0xc,%esp
 8049f3a:	68 28 ab 04 08       	push   $0x804ab28
 8049f3f:	e8 cc e9 ff ff       	call   8048910 <gethostbyname@plt>
 8049f44:	83 c4 10             	add    $0x10,%esp
 8049f47:	85 c0                	test   %eax,%eax
 8049f49:	75 6c                	jne    8049fb7 <init_driver+0x11c>
 8049f4b:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049f51:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 8049f58:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 8049f5f:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 8049f66:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049f6d:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049f74:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 8049f7b:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 8049f82:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 8049f89:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 8049f90:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 8049f97:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 8049f9d:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 8049fa1:	83 ec 0c             	sub    $0xc,%esp
 8049fa4:	53                   	push   %ebx
 8049fa5:	e8 96 e9 ff ff       	call   8048940 <close@plt>
 8049faa:	83 c4 10             	add    $0x10,%esp
 8049fad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049fb2:	e9 9d 00 00 00       	jmp    804a054 <init_driver+0x1b9>
 8049fb7:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 8049fbb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049fc2:	00 
 8049fc3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8049fca:	00 
 8049fcb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049fd2:	00 
 8049fd3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049fda:	00 
 8049fdb:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 8049fe2:	6a 0c                	push   $0xc
 8049fe4:	ff 70 0c             	pushl  0xc(%eax)
 8049fe7:	8b 40 10             	mov    0x10(%eax),%eax
 8049fea:	ff 30                	pushl  (%eax)
 8049fec:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8049ff0:	50                   	push   %eax
 8049ff1:	e8 6a e8 ff ff       	call   8048860 <__memmove_chk@plt>
 8049ff6:	66 c7 44 24 1e 43 31 	movw   $0x3143,0x1e(%esp)
 8049ffd:	83 c4 0c             	add    $0xc,%esp
 804a000:	6a 10                	push   $0x10
 804a002:	57                   	push   %edi
 804a003:	53                   	push   %ebx
 804a004:	e8 27 e9 ff ff       	call   8048930 <connect@plt>
 804a009:	83 c4 10             	add    $0x10,%esp
 804a00c:	85 c0                	test   %eax,%eax
 804a00e:	79 2a                	jns    804a03a <init_driver+0x19f>
 804a010:	83 ec 0c             	sub    $0xc,%esp
 804a013:	68 28 ab 04 08       	push   $0x804ab28
 804a018:	68 e8 aa 04 08       	push   $0x804aae8
 804a01d:	6a ff                	push   $0xffffffff
 804a01f:	6a 01                	push   $0x1
 804a021:	56                   	push   %esi
 804a022:	e8 39 e9 ff ff       	call   8048960 <__sprintf_chk@plt>
 804a027:	83 c4 14             	add    $0x14,%esp
 804a02a:	53                   	push   %ebx
 804a02b:	e8 10 e9 ff ff       	call   8048940 <close@plt>
 804a030:	83 c4 10             	add    $0x10,%esp
 804a033:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a038:	eb 1a                	jmp    804a054 <init_driver+0x1b9>
 804a03a:	83 ec 0c             	sub    $0xc,%esp
 804a03d:	53                   	push   %ebx
 804a03e:	e8 fd e8 ff ff       	call   8048940 <close@plt>
 804a043:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 804a048:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 804a04c:	83 c4 10             	add    $0x10,%esp
 804a04f:	b8 00 00 00 00       	mov    $0x0,%eax
 804a054:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804a058:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a05f:	74 05                	je     804a066 <init_driver+0x1cb>
 804a061:	e8 9a e7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804a066:	83 c4 20             	add    $0x20,%esp
 804a069:	5b                   	pop    %ebx
 804a06a:	5e                   	pop    %esi
 804a06b:	5f                   	pop    %edi
 804a06c:	c3                   	ret    

0804a06d <driver_post>:
 804a06d:	53                   	push   %ebx
 804a06e:	83 ec 08             	sub    $0x8,%esp
 804a071:	8b 44 24 10          	mov    0x10(%esp),%eax
 804a075:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 804a079:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 804a07e:	74 26                	je     804a0a6 <driver_post+0x39>
 804a080:	83 ec 04             	sub    $0x4,%esp
 804a083:	ff 74 24 18          	pushl  0x18(%esp)
 804a087:	68 3d ab 04 08       	push   $0x804ab3d
 804a08c:	6a 01                	push   $0x1
 804a08e:	e8 4d e8 ff ff       	call   80488e0 <__printf_chk@plt>
 804a093:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a098:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a09c:	83 c4 10             	add    $0x10,%esp
 804a09f:	b8 00 00 00 00       	mov    $0x0,%eax
 804a0a4:	eb 3e                	jmp    804a0e4 <driver_post+0x77>
 804a0a6:	85 c0                	test   %eax,%eax
 804a0a8:	74 2c                	je     804a0d6 <driver_post+0x69>
 804a0aa:	80 38 00             	cmpb   $0x0,(%eax)
 804a0ad:	74 27                	je     804a0d6 <driver_post+0x69>
 804a0af:	83 ec 04             	sub    $0x4,%esp
 804a0b2:	53                   	push   %ebx
 804a0b3:	ff 74 24 1c          	pushl  0x1c(%esp)
 804a0b7:	68 54 ab 04 08       	push   $0x804ab54
 804a0bc:	50                   	push   %eax
 804a0bd:	68 5b ab 04 08       	push   $0x804ab5b
 804a0c2:	68 31 43 00 00       	push   $0x4331
 804a0c7:	68 28 ab 04 08       	push   $0x804ab28
 804a0cc:	e8 cb f5 ff ff       	call   804969c <submitr>
 804a0d1:	83 c4 20             	add    $0x20,%esp
 804a0d4:	eb 0e                	jmp    804a0e4 <driver_post+0x77>
 804a0d6:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a0db:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a0df:	b8 00 00 00 00       	mov    $0x0,%eax
 804a0e4:	83 c4 08             	add    $0x8,%esp
 804a0e7:	5b                   	pop    %ebx
 804a0e8:	c3                   	ret    
 804a0e9:	66 90                	xchg   %ax,%ax
 804a0eb:	66 90                	xchg   %ax,%ax
 804a0ed:	66 90                	xchg   %ax,%ax
 804a0ef:	90                   	nop

0804a0f0 <__libc_csu_init>:
 804a0f0:	55                   	push   %ebp
 804a0f1:	57                   	push   %edi
 804a0f2:	56                   	push   %esi
 804a0f3:	53                   	push   %ebx
 804a0f4:	e8 b7 e8 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a0f9:	81 c3 07 2f 00 00    	add    $0x2f07,%ebx
 804a0ff:	83 ec 0c             	sub    $0xc,%esp
 804a102:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 804a106:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804a10c:	e8 4f e6 ff ff       	call   8048760 <_init>
 804a111:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 804a117:	29 c6                	sub    %eax,%esi
 804a119:	c1 fe 02             	sar    $0x2,%esi
 804a11c:	85 f6                	test   %esi,%esi
 804a11e:	74 25                	je     804a145 <__libc_csu_init+0x55>
 804a120:	31 ff                	xor    %edi,%edi
 804a122:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a128:	83 ec 04             	sub    $0x4,%esp
 804a12b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a12f:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a133:	55                   	push   %ebp
 804a134:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804a13b:	83 c7 01             	add    $0x1,%edi
 804a13e:	83 c4 10             	add    $0x10,%esp
 804a141:	39 f7                	cmp    %esi,%edi
 804a143:	75 e3                	jne    804a128 <__libc_csu_init+0x38>
 804a145:	83 c4 0c             	add    $0xc,%esp
 804a148:	5b                   	pop    %ebx
 804a149:	5e                   	pop    %esi
 804a14a:	5f                   	pop    %edi
 804a14b:	5d                   	pop    %ebp
 804a14c:	c3                   	ret    
 804a14d:	8d 76 00             	lea    0x0(%esi),%esi

0804a150 <__libc_csu_fini>:
 804a150:	f3 c3                	repz ret 

Disassembly of section .fini:

0804a154 <_fini>:
 804a154:	53                   	push   %ebx
 804a155:	83 ec 08             	sub    $0x8,%esp
 804a158:	e8 53 e8 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a15d:	81 c3 a3 2e 00 00    	add    $0x2ea3,%ebx
 804a163:	83 c4 08             	add    $0x8,%esp
 804a166:	5b                   	pop    %ebx
 804a167:	c3                   	ret    
